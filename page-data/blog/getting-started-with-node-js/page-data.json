{"componentChunkName":"component---src-pages-blog-contentful-post-slug-tsx","path":"/blog/getting-started-with-node-js/","result":{"data":{"contentfulPost":{"id":"60386408-21fb-544c-8d6f-88f0e3b17467","slug":"getting-started-with-node-js","title":"Getting Started With Node.js","date":"February 28th, 2017","image":{"file":{"url":"//images.ctfassets.net/e87exinclc25/24SrRpnCLUvf1xfbyugyNN/24db1c6b4291bf4673e070a5724a447e/nodejs-getting-started.png"}},"content":{"raw":"{\"nodeType\":\"document\",\"data\":{},\"content\":[{\"nodeType\":\"heading-2\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Introduction\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Node is a javascript runtime environment that was built on top of google chrome’s V8 engine. It can be used to build many different things such as web and desktop apps, APIs, real-time applications, games, it can even act as a web server. In this lesson we’ll get into the basics of Node and NPM (Node Package Manager). NPM will help us install different modules used in modern javascript development.\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-2\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Pre-Requisites\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"unordered-list\",\"content\":[{\"nodeType\":\"list-item\",\"content\":[{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"A text editor\",\"marks\":[],\"data\":{}}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"list-item\",\"content\":[{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Some knowledge in javascript\",\"marks\":[],\"data\":{}}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"list-item\",\"content\":[{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"A command line application and a \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"content\":[{\"nodeType\":\"text\",\"value\":\"basic understanding of how to use it\",\"marks\":[],\"data\":{}}],\"data\":{\"uri\":\"https://crisnoel12.github.io/blog/introduction-to-the-command-line\"}},{\"nodeType\":\"text\",\"value\":\".\",\"marks\":[],\"data\":{}}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"list-item\",\"content\":[{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"And of course, you need to have \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Node.js installed\",\"marks\":[],\"data\":{}}],\"data\":{\"uri\":\"https://nodejs.org/en/\"}},{\"nodeType\":\"text\",\"value\":\".\",\"marks\":[],\"data\":{}}],\"data\":{}}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-2\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Setup\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"First, let’s create a folder in the desktop directory or any directory that you prefer. We’ll name it \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"node-intro\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\".\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"mkdir node-intro\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Then, cd into that directory and run \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"npm init\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\". It will prompt you to enter some information regarding the project information. For this tutorial it isn’t important so let’s just enter through it.\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Once you’ve gone through all the prompts, you should notice a \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"package.json\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" file was created in \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"node-intro\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\". This file holds all the information that you would of entered in the previous step, along with the list of npm packages you will install, which we’ll get into later.\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-2\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Using NPM\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"NPM is a CLI tool that will help us manage javascript packages necessary for various projects. We’ll go through installing, updating, uninstalling and listing packages.\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-3\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Installing Packages\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"npm install <package-name>\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"There are 3 different flags we can append to the end of the install command to save them in different locations:\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"unordered-list\",\"content\":[{\"nodeType\":\"list-item\",\"content\":[{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Global Flag (-g) - \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"Packages that you tend to use in multiple projects. Can be used in any directory you’re in. Will save in your global packages list.\",\"marks\":[],\"data\":{}}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"list-item\",\"content\":[{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Save Flag (-S) - \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"Packages that your project depends on to function. Will save in your project’s package.json file under \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"dependencies\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\". Will be used in production environment.\",\"marks\":[],\"data\":{}}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"list-item\",\"content\":[{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Dev Dependency Flag (-D) - \",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"Packages that your project doesn’t depend on to function. Will save in package.json file under \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"devDependecies\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\". Won’t be used in production environment.\",\"marks\":[],\"data\":{}}],\"data\":{}}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"*These flags can be used for update and uninstall as well, depending on the package you’re targeting.\",\"marks\":[{\"type\":\"italic\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Using the CLI inside the \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"node-intro\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" directory, let’s install 3 different packages using the optional flags:\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-4\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Nodemon\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"A utility that restarts server upon code change.\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"npm install nodemon -g\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-4\",\"content\":[{\"nodeType\":\"text\",\"value\":\"\\nExpress\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"A node web framework.\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"npm install express -S\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-4\",\"content\":[{\"nodeType\":\"text\",\"value\":\"\\nWebpack\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"A front-end module bundler\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"npm install nodemon -D\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"After installing \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"express\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" and \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"webpack\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\", you should notice a \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"node_modules\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" folder was created. This holds the express and webpack packages along with their dependencies. Your packages.json should be updated as well and look like this:\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"{\\n  \\\"name\\\": \\\"node\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"main\\\": \\\"index.js\\\",\\n  \\\"scripts\\\": {\\n    \\\"test\\\": \\\"echo \\\\\\\"Error: no test specified\\\\\\\" && exit 1\\\"\\n  },\\n  \\\"author\\\": \\\"\\\",\\n  \\\"license\\\": \\\"ISC\\\",\\n  \\\"dependencies\\\": {\\n    \\\"express\\\": \\\"^4.14.1\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"webpack\\\": \\\"^2.2.1\\\"\\n  }}\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"A cool little tidbit with the package.json file. When sharing your project with colleagues through github, you generally dont want to include the node_modules folder since it can be quite large in file size. So how do your colleagues install all those packages that could total a dozen? As long as you uploaded the package.json file and saved the packages to the appropriate dependencies, then all they need to do is clone the project and run one command: \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"npm install\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\". It can save time and finger muscle fatigue.\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-3\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Updating Packages\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"npm update <package-name>\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"To view your project’s outdated packages, run: \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"npm outdated\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\".\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-3\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Uninstalling Packages\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"npm uninstall <package-name>\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"To remove packages from package.json file, append the necessary flags.\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-3\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Listing Packages\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"npm list --depth=0\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"When listing packages, npm will list \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"ALL\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" the packages in the node_modules or global repository, add the \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"depth\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" flag and set it to \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"0\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" to view only the top level packages. To view global packages, append the \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"-g\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" flag.\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-2\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Using Node\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-3\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Running Javascript Files\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"With node we can run javascript files and see the output right in CLI. In the \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"node-intro\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" folder, create a new file called \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"app.js\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\". Let’s output a simple \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"Hello World!\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" message.\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"console.log(\\\"Hello World!\\\");\\n\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Now run:\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"node app.js\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"We should see \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"Hello World!\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" printed in the CLI.\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-3\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Creating A Web Server\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"If you want to run a web server, node can do that too. Let’s create another file called \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"server.js\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" and paste in this code:\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"var http = require('http');var port = 8000;\\n\\nvar server = http.createServer(function (req, res) {\\n\\n  /*\\n    Response: plain text\\n  */\\n  res.writeHead(200, {'Content-Type': 'text/plain'});\\n  res.write(\\\"Hello World!\\\");\\n  res.end();\\n\\n}).listen(port);\\n\\nconsole.log(\\\"Server running on port \\\" + port);\",\"marks\":[{\"type\":\"code\"}],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-4\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Install Http\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Notice that we’re requiring the \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"http\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" package. Let’s install that with \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"NPM\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\".\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-4\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Create Web Server\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"To use the http package as a web server, we set a variable called \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"server\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" and set it equal to the \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"createServer\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" method of http. Within that, we insert a callback function with two parameters: \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"req\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" and \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"res\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" (req standing for \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"request\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" and res standing for \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"response\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"). Since we don’t have routes set up for this example, the req and res data will be reflected once a http request is made to \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"localhost:8000\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\".\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-4\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Fill With Response Data\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Inside the \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"server\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" callback function we call the res object and call on methods to set various data. We use \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"writeHead\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" to send a header with type of \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"text/plain\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" along with a 200 http status code. With the \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"write\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" method we can add any text we want to the document’s body. The \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"end\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" method will close the body, without this, the document won’t load.\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-4\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Listen Function\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"The final piece to the puzzle is the listen function, we pass it the port number from line 2. So when a request is made to \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"localhost:8000\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\", the response data inside the server object will fire off.\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-3\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Starting The Web Server\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"We’re ready to run the web server. Run \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"node server.js\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" in the CLI. It should display \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"Server running on port 8000\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\".\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Now open a web browser of your choice and enter \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"content\":[{\"nodeType\":\"text\",\"value\":\"http://localhost:8000\",\"marks\":[],\"data\":{}}],\"data\":{\"uri\":\"http://localhost:8000/\"}},{\"nodeType\":\"text\",\"value\":\" in the address bar. If all goes to plan, you should see \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"Hello World!\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" printed out again, this time in the browser.\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"To stop the server, press \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"ctrl + c\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" in the CLI.\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"heading-2\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Conclusion\",\"marks\":[],\"data\":{}}],\"data\":{}},{\"nodeType\":\"paragraph\",\"content\":[{\"nodeType\":\"text\",\"value\":\"Through the end of this tutorial, we’ve learned how to \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"install\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\", \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"update\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\", \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"uninstall\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" and \",\"marks\":[],\"data\":{}},{\"nodeType\":\"text\",\"value\":\"list\",\"marks\":[{\"type\":\"bold\"}],\"data\":{}},{\"nodeType\":\"text\",\"value\":\" packages with NPM. We’ve covered the basics, but you can learn more at the \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"content\":[{\"nodeType\":\"text\",\"value\":\"npm docs\",\"marks\":[],\"data\":{}}],\"data\":{\"uri\":\"https://docs.npmjs.com/\"}},{\"nodeType\":\"text\",\"value\":\" or if you want to look through the \",\"marks\":[],\"data\":{}},{\"nodeType\":\"hyperlink\",\"content\":[{\"nodeType\":\"text\",\"value\":\"most popular packages\",\"marks\":[],\"data\":{}}],\"data\":{\"uri\":\"https://www.npmjs.com/browse/star\"}},{\"nodeType\":\"text\",\"value\":\". With node, we’ve learned how to process a javascript file through the CLI, as well as create a simple web server.\",\"marks\":[],\"data\":{}}],\"data\":{}}]}","references":[]}}},"pageContext":{"id":"60386408-21fb-544c-8d6f-88f0e3b17467","slug":"getting-started-with-node-js","__params":{"slug":"getting-started-with-node-js"}}},"staticQueryHashes":[]}