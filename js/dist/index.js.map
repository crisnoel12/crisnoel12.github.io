{"version":3,"sources":["matchHeight.js","myNav.js","myWaypoint.js","main.js"],"names":[],"mappingsjlFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["/**\r\n* jquery-match-height master by @liabru\r\n* http://brm.io/jquery-match-height/\r\n* License: MIT\r\n*/\r\n\r\n;(function(factory) { // eslint-disable-line no-extra-semi\r\n    'use strict';\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD\r\n        define(['jquery'], factory);\r\n    } else if (typeof module !== 'undefined' && module.exports) {\r\n        // CommonJS\r\n        module.exports = factory(require('jquery'));\r\n    } else {\r\n        // Global\r\n        factory(jQuery);\r\n    }\r\n})(function($) {\r\n    /*\r\n    *  internal\r\n    */\r\n\r\n    var _previousResizeWidth = -1,\r\n        _updateTimeout = -1;\r\n\r\n    /*\r\n    *  _parse\r\n    *  value parse utility function\r\n    */\r\n\r\n    var _parse = function(value) {\r\n        // parse value and convert NaN to 0\r\n        return parseFloat(value) || 0;\r\n    };\r\n\r\n    /*\r\n    *  _rows\r\n    *  utility function returns array of jQuery selections representing each row\r\n    *  (as displayed after float wrapping applied by browser)\r\n    */\r\n\r\n    var _rows = function(elements) {\r\n        var tolerance = 1,\r\n            $elements = $(elements),\r\n            lastTop = null,\r\n            rows = [];\r\n\r\n        // group elements by their top position\r\n        $elements.each(function(){\r\n            var $that = $(this),\r\n                top = $that.offset().top - _parse($that.css('margin-top')),\r\n                lastRow = rows.length > 0 ? rows[rows.length - 1] : null;\r\n\r\n            if (lastRow === null) {\r\n                // first item on the row, so just push it\r\n                rows.push($that);\r\n            } else {\r\n                // if the row top is the same, add to the row group\r\n                if (Math.floor(Math.abs(lastTop - top)) <= tolerance) {\r\n                    rows[rows.length - 1] = lastRow.add($that);\r\n                } else {\r\n                    // otherwise start a new row group\r\n                    rows.push($that);\r\n                }\r\n            }\r\n\r\n            // keep track of the last row top\r\n            lastTop = top;\r\n        });\r\n\r\n        return rows;\r\n    };\r\n\r\n    /*\r\n    *  _parseOptions\r\n    *  handle plugin options\r\n    */\r\n\r\n    var _parseOptions = function(options) {\r\n        var opts = {\r\n            byRow: true,\r\n            property: 'height',\r\n            target: null,\r\n            remove: false\r\n        };\r\n\r\n        if (typeof options === 'object') {\r\n            return $.extend(opts, options);\r\n        }\r\n\r\n        if (typeof options === 'boolean') {\r\n            opts.byRow = options;\r\n        } else if (options === 'remove') {\r\n            opts.remove = true;\r\n        }\r\n\r\n        return opts;\r\n    };\r\n\r\n    /*\r\n    *  matchHeight\r\n    *  plugin definition\r\n    */\r\n\r\n    var matchHeight = $.fn.matchHeight = function(options) {\r\n        var opts = _parseOptions(options);\r\n\r\n        // handle remove\r\n        if (opts.remove) {\r\n            var that = this;\r\n\r\n            // remove fixed height from all selected elements\r\n            this.css(opts.property, '');\r\n\r\n            // remove selected elements from all groups\r\n            $.each(matchHeight._groups, function(key, group) {\r\n                group.elements = group.elements.not(that);\r\n            });\r\n\r\n            // TODO: cleanup empty groups\r\n\r\n            return this;\r\n        }\r\n\r\n        if (this.length <= 1 && !opts.target) {\r\n            return this;\r\n        }\r\n\r\n        // keep track of this group so we can re-apply later on load and resize events\r\n        matchHeight._groups.push({\r\n            elements: this,\r\n            options: opts\r\n        });\r\n\r\n        // match each element's height to the tallest element in the selection\r\n        matchHeight._apply(this, opts);\r\n\r\n        return this;\r\n    };\r\n\r\n    /*\r\n    *  plugin global options\r\n    */\r\n\r\n    matchHeight.version = 'master';\r\n    matchHeight._groups = [];\r\n    matchHeight._throttle = 80;\r\n    matchHeight._maintainScroll = false;\r\n    matchHeight._beforeUpdate = null;\r\n    matchHeight._afterUpdate = null;\r\n    matchHeight._rows = _rows;\r\n    matchHeight._parse = _parse;\r\n    matchHeight._parseOptions = _parseOptions;\r\n\r\n    /*\r\n    *  matchHeight._apply\r\n    *  apply matchHeight to given elements\r\n    */\r\n\r\n    matchHeight._apply = function(elements, options) {\r\n        var opts = _parseOptions(options),\r\n            $elements = $(elements),\r\n            rows = [$elements];\r\n\r\n        // take note of scroll position\r\n        var scrollTop = $(window).scrollTop(),\r\n            htmlHeight = $('html').outerHeight(true);\r\n\r\n        // get hidden parents\r\n        var $hiddenParents = $elements.parents().filter(':hidden');\r\n\r\n        // cache the original inline style\r\n        $hiddenParents.each(function() {\r\n            var $that = $(this);\r\n            $that.data('style-cache', $that.attr('style'));\r\n        });\r\n\r\n        // temporarily must force hidden parents visible\r\n        $hiddenParents.css('display', 'block');\r\n\r\n        // get rows if using byRow, otherwise assume one row\r\n        if (opts.byRow && !opts.target) {\r\n\r\n            // must first force an arbitrary equal height so floating elements break evenly\r\n            $elements.each(function() {\r\n                var $that = $(this),\r\n                    display = $that.css('display');\r\n\r\n                // temporarily force a usable display value\r\n                if (display !== 'inline-block' && display !== 'flex' && display !== 'inline-flex') {\r\n                    display = 'block';\r\n                }\r\n\r\n                // cache the original inline style\r\n                $that.data('style-cache', $that.attr('style'));\r\n\r\n                $that.css({\r\n                    'display': display,\r\n                    'padding-top': '0',\r\n                    'padding-bottom': '0',\r\n                    'margin-top': '0',\r\n                    'margin-bottom': '0',\r\n                    'border-top-width': '0',\r\n                    'border-bottom-width': '0',\r\n                    'height': '100px',\r\n                    'overflow': 'hidden'\r\n                });\r\n            });\r\n\r\n            // get the array of rows (based on element top position)\r\n            rows = _rows($elements);\r\n\r\n            // revert original inline styles\r\n            $elements.each(function() {\r\n                var $that = $(this);\r\n                $that.attr('style', $that.data('style-cache') || '');\r\n            });\r\n        }\r\n\r\n        $.each(rows, function(key, row) {\r\n            var $row = $(row),\r\n                targetHeight = 0;\r\n\r\n            if (!opts.target) {\r\n                // skip apply to rows with only one item\r\n                if (opts.byRow && $row.length <= 1) {\r\n                    $row.css(opts.property, '');\r\n                    return;\r\n                }\r\n\r\n                // iterate the row and find the max height\r\n                $row.each(function(){\r\n                    var $that = $(this),\r\n                        style = $that.attr('style'),\r\n                        display = $that.css('display');\r\n\r\n                    // temporarily force a usable display value\r\n                    if (display !== 'inline-block' && display !== 'flex' && display !== 'inline-flex') {\r\n                        display = 'block';\r\n                    }\r\n\r\n                    // ensure we get the correct actual height (and not a previously set height value)\r\n                    var css = { 'display': display };\r\n                    css[opts.property] = '';\r\n                    $that.css(css);\r\n\r\n                    // find the max height (including padding, but not margin)\r\n                    if ($that.outerHeight(false) > targetHeight) {\r\n                        targetHeight = $that.outerHeight(false);\r\n                    }\r\n\r\n                    // revert styles\r\n                    if (style) {\r\n                        $that.attr('style', style);\r\n                    } else {\r\n                        $that.css('display', '');\r\n                    }\r\n                });\r\n            } else {\r\n                // if target set, use the height of the target element\r\n                targetHeight = opts.target.outerHeight(false);\r\n            }\r\n\r\n            // iterate the row and apply the height to all elements\r\n            $row.each(function(){\r\n                var $that = $(this),\r\n                    verticalPadding = 0;\r\n\r\n                // don't apply to a target\r\n                if (opts.target && $that.is(opts.target)) {\r\n                    return;\r\n                }\r\n\r\n                // handle padding and border correctly (required when not using border-box)\r\n                if ($that.css('box-sizing') !== 'border-box') {\r\n                    verticalPadding += _parse($that.css('border-top-width')) + _parse($that.css('border-bottom-width'));\r\n                    verticalPadding += _parse($that.css('padding-top')) + _parse($that.css('padding-bottom'));\r\n                }\r\n\r\n                // set the height (accounting for padding and border)\r\n                $that.css(opts.property, (targetHeight - verticalPadding) + 'px');\r\n            });\r\n        });\r\n\r\n        // revert hidden parents\r\n        $hiddenParents.each(function() {\r\n            var $that = $(this);\r\n            $that.attr('style', $that.data('style-cache') || null);\r\n        });\r\n\r\n        // restore scroll position if enabled\r\n        if (matchHeight._maintainScroll) {\r\n            $(window).scrollTop((scrollTop / htmlHeight) * $('html').outerHeight(true));\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /*\r\n    *  matchHeight._applyDataApi\r\n    *  applies matchHeight to all elements with a data-match-height attribute\r\n    */\r\n\r\n    matchHeight._applyDataApi = function() {\r\n        var groups = {};\r\n\r\n        // generate groups by their groupId set by elements using data-match-height\r\n        $('[data-match-height], [data-mh]').each(function() {\r\n            var $this = $(this),\r\n                groupId = $this.attr('data-mh') || $this.attr('data-match-height');\r\n\r\n            if (groupId in groups) {\r\n                groups[groupId] = groups[groupId].add($this);\r\n            } else {\r\n                groups[groupId] = $this;\r\n            }\r\n        });\r\n\r\n        // apply matchHeight to each group\r\n        $.each(groups, function() {\r\n            this.matchHeight(true);\r\n        });\r\n    };\r\n\r\n    /*\r\n    *  matchHeight._update\r\n    *  updates matchHeight on all current groups with their correct options\r\n    */\r\n\r\n    var _update = function(event) {\r\n        if (matchHeight._beforeUpdate) {\r\n            matchHeight._beforeUpdate(event, matchHeight._groups);\r\n        }\r\n\r\n        $.each(matchHeight._groups, function() {\r\n            matchHeight._apply(this.elements, this.options);\r\n        });\r\n\r\n        if (matchHeight._afterUpdate) {\r\n            matchHeight._afterUpdate(event, matchHeight._groups);\r\n        }\r\n    };\r\n\r\n    matchHeight._update = function(throttle, event) {\r\n        // prevent update if fired from a resize event\r\n        // where the viewport width hasn't actually changed\r\n        // fixes an event looping bug in IE8\r\n        if (event && event.type === 'resize') {\r\n            var windowWidth = $(window).width();\r\n            if (windowWidth === _previousResizeWidth) {\r\n                return;\r\n            }\r\n            _previousResizeWidth = windowWidth;\r\n        }\r\n\r\n        // throttle updates\r\n        if (!throttle) {\r\n            _update(event);\r\n        } else if (_updateTimeout === -1) {\r\n            _updateTimeout = setTimeout(function() {\r\n                _update(event);\r\n                _updateTimeout = -1;\r\n            }, matchHeight._throttle);\r\n        }\r\n    };\r\n\r\n    /*\r\n    *  bind events\r\n    */\r\n\r\n    // apply on DOM ready event\r\n    $(matchHeight._applyDataApi);\r\n\r\n    // update heights on load and resize events\r\n    $(window).bind('load', function(event) {\r\n        matchHeight._update(false, event);\r\n    });\r\n\r\n    // throttled update heights on resize events\r\n    $(window).bind('resize orientationchange', function(event) {\r\n        matchHeight._update(true, event);\r\n    });\r\n\r\n});\r\n","$(document).ready(function() {\r\n    'use strict';\r\n\r\n    /*\r\n     * Change navbar bg color to rgba(0,0,0,.85) when viewport is below the top or when window is less than 768px\r\n    */\r\n     function navbarDefault() {\r\n         return $(\".navbar\").css({\r\n             'background-color': 'rgba(0,0,0,.85)'\r\n         });\r\n     }\r\n\r\n     function navbarTransparent() {\r\n         return $(\".navbar\").css({\r\n             'background-color': 'transparent'\r\n         });\r\n     }\r\n\r\n    if (window.location.pathname === '/') {\r\n        if ($(window).width() >= 768) {\r\n            if (document.body.scrollTop !== 0) {\r\n                navbarDefault();\r\n            } else {\r\n                navbarTransparent();\r\n            }\r\n        }\r\n        $(window).scroll(function() {\r\n            if ($(window).width() >= 768) {\r\n                if ($(document).scrollTop() > 5) {\r\n                    navbarDefault();\r\n                } else {\r\n                    navbarTransparent();\r\n                }\r\n            }\r\n        });\r\n        $(window).resize(function() {\r\n            if ($(window).width() < 768) {\r\n                navbarDefault();\r\n            } else {\r\n                if (document.body.scrollTop !== 0) {\r\n                    navbarDefault();\r\n                } else {\r\n                    navbarTransparent();\r\n                }\r\n            }\r\n        });\r\n    }\r\n});","$(document).ready(function() {\r\n    'use strict';\r\n    /*\r\n     * Waypoint animation variables and functions\r\n     * Variables = section, elementsArr1, elementsArr2, animation[1,2]\r\n    */\r\n    var about = [\r\n            ['#about'],\r\n            ['#about .section-heading', '#about .header-line'],\r\n            ['#about img', '#about p', '#about a'],\r\n            ['slideInLeft', 'fadeInUp']\r\n        ],\r\n        skills = [\r\n            ['#skills'],\r\n            ['#skills .section-heading', '#skills .header-line'],\r\n            ['#skills .skill'],\r\n            ['slideInLeft', 'fadeInUp']\r\n        ],\r\n        works = [\r\n            ['#works'],\r\n            ['#works .section-heading', '#works .header-line'],\r\n            ['#works .work'],\r\n            ['slideInLeft', 'fadeIn']\r\n        ],\r\n        quotes = [\r\n            ['#quotes'],\r\n            ['#quotes .section-heading', '#quotes .header-line'],\r\n            ['#quotes #my-carousel'],\r\n            ['slideInLeft', 'fadeIn']\r\n        ],\r\n        blog = [\r\n            ['#blog'],\r\n            ['#blog .section-heading', '#blog .header-line'],\r\n            ['#blog .blogs', '#blog .section-desc'],\r\n            ['slideInLeft', 'fadeIn']\r\n        ],\r\n        contact = [\r\n            ['#contact'],\r\n            ['#contact .section-heading', '#contact .header-line', '#contact .contact-form'],\r\n            ['#contact #map'],\r\n            ['slideInLeft', 'fadeInUp']\r\n        ],\r\n        blogDiv = document.getElementById('blog'); // set blogDiv variable to check if it exists later on\r\n\r\n    function hideSectionElements(elements) {\r\n        $(elements).css('opacity', 0);\r\n    }\r\n\r\n    function showSectionElements(elements) {\r\n        $(elements).css('opacity', 1);\r\n    }\r\n\r\n    function animateElements(elements, animation) {\r\n        $('' + elements + '').addClass('animated' + ' ' + animation);\r\n    }\r\n\r\n    function waypointAnimation(section) {\r\n        hideSectionElements(section[1] + \", \" + section[2]);\r\n        $(section[0]).waypoint(function() {\r\n            showSectionElements(section[1] + \",\" + section[2]);\r\n            animateElements(section[1], section[3][0]);\r\n            animateElements(section[2], section[3][1]);\r\n        }, {\r\n            offset: '50%'\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Run waypointAnimation only when window is greater than 768px\r\n    */\r\n    if ($(window).width() >= 768) {\r\n        if (window.location.pathname === '/') {\r\n            waypointAnimation(about);\r\n            waypointAnimation(skills);\r\n            waypointAnimation(works);\r\n            waypointAnimation(quotes);\r\n            if (blogDiv !== null) {\r\n                waypointAnimation(blog);\r\n            }\r\n            waypointAnimation(contact);\r\n        }\r\n    }\r\n});","$(document).ready(function() {\r\n    'use strict';\r\n\r\n    // Make all blog listings the same height\r\n    $(function() {\r\n      $('.listing').matchHeight();\r\n    });\r\n\r\n    /* \r\n     * Bootstrap dependencies\r\n    */\r\n    $('[data-toggle=\"tooltip\"]').tooltip();\r\n    \r\n    $('#myTabs a').click(function (e) {\r\n        e.preventDefault()\r\n        $(this).tab('show')\r\n    });\r\n\r\n    /*\r\n     * Smooth scroll to div\r\n    */\r\n    $('a[href*=\"#\"]:not([href=\"#\"]):not([href=\"#my-carousel\"]):not([role=\"tab\"])').click(function() {\r\n    if (location.pathname.replace(/^\\//,'') == this.pathname.replace(/^\\//,'') && location.hostname == this.hostname) {\r\n      var target = $(this.hash);\r\n      target = target.length ? target : $('[name=' + this.hash.slice(1) +']');\r\n      if (target.length) {\r\n        $('html, body').animate({\r\n          scrollTop: target.offset().top\r\n        }, 1000);\r\n        return false;\r\n      }\r\n    }\r\n    });\r\n\r\n    $('a[href=\"#\"]').click(function(){\r\n      $('html, body').animate({\r\n        scrollTop: 0\r\n      }, 1000);\r\n      return false;\r\n    });\r\n\r\n    /*\r\n     * Show/Hide to-top btn based on scroll position\r\n    */\r\n    function hideTopBtn(){\r\n        return $(\"#to-top\").css(\"display\", \"none\");\r\n    }\r\n    function showTopBtn(){\r\n        $(\"#to-top\").css(\"display\", \"block\");\r\n    }\r\n    if ($(document).scrollTop() > 5) {\r\n        showTopBtn();\r\n    } else {\r\n        hideTopBtn();\r\n    }\r\n    $(window).scroll(function() {\r\n        if ($(document).scrollTop() > 5) {\r\n            showTopBtn();\r\n        } else {\r\n            hideTopBtn();\r\n        }\r\n    });\r\n});\r\n\r\n\r\n\r\n//# sourceMappingURL=app.js.map\r\n"]}