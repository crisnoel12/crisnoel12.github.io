{"version":3,"file":"component---src-pages-index-tsx-e5556c46e78df4cd7439.js","mappings":"4IAwBA,IAf6CA,IAAwB,IAAvB,KAAEC,EAAI,QAAEC,GAASF,EAC7D,OACEG,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,OAAKC,UAAW,0BACdD,EAAAA,cAACE,EAAAA,IAAU,CAACC,MAAM,SAASF,UAAW,iBACtCD,EAAAA,cAAA,KAAGC,UAAW,WAAYH,IAE5BE,EAAAA,cAAA,OAAKC,UAAW,qBACdD,EAAAA,cAACI,EAAAA,IAAO,CAACD,MAAM,cAAcF,UAAW,iBACxCD,EAAAA,cAAA,KAAGC,UAAW,YAAYI,EAAAA,EAAAA,IAAkBN,GAASO,OAEnD,C,+ECVK,SAASC,EAAOC,GAC7B,MAAM,KAAEC,EAAI,OAAEC,EAAM,OAAEC,GAAWH,EAC3BI,EAAgB,mGACpBD,GAAUA,IAGZ,OAAIF,EACEC,GAAqB,WAAXA,EAEVV,EAAAA,cAAA,KAAGS,KAAMA,EAAMC,OAAQA,EAAQT,UAAWW,GACvCJ,EAAMK,UAKTb,EAAAA,cAACc,EAAAA,KAAI,CAACC,GAAIN,EAAMC,OAAQA,EAAQT,UAAWW,GACxCJ,EAAMK,UAKRb,EAAAA,cAAA,UAAQC,UAAWW,GAAeJ,EAAMK,SACjD,C,qCClBA,IARiChB,IAAkB,IAAjB,QAAEmB,GAASnB,EAC3C,OACEG,EAAAA,cAAA,KAAGC,UAAU,uBACVe,EAAQC,OAAS,IAAO,GAAED,EAAQE,MAAM,EAAG,UAAYF,EACtD,C,qECFO,SAASG,EAAWX,GACjC,MAAM,QAAEY,EAAO,MAAEC,GAAUb,EAyCrBc,EAAYA,KAChB,OAAQD,GACN,IAAK,OACH,MAAO,CAAC,YAAa,WACvB,IAAK,QACH,MAAO,CAAC,aAAc,WACxB,QACE,MAAO,CAAC,cAAe,WAC3B,EAEF,OACErB,EAAAA,cAAA,OAAKC,UAAY,GAAEqB,IAAY,MAnDXC,MACpB,OAAQH,GACN,IAAK,KACH,OACEpB,EAAAA,cAAA,MAAIC,UAAU,6CACXO,EAAMK,UAGb,IAAK,KACH,OACEb,EAAAA,cAAA,MAAIC,UAAU,6CACXO,EAAMK,UAGb,IAAK,KACH,OACEb,EAAAA,cAAA,MAAIC,UAAU,6CACXO,EAAMK,UAGb,IAAK,KACH,OACEb,EAAAA,cAAA,MAAIC,UAAU,4CACXO,EAAMK,UAGb,IAAK,KACH,OACEb,EAAAA,cAAA,MAAIC,UAAU,4CACXO,EAAMK,UAGb,QACE,OACEb,EAAAA,cAAA,MAAIC,UAAU,6CACXO,EAAMK,UAGf,EAcGU,GACDvB,EAAAA,cAAA,QACEC,UAAY,+BACVqB,IAAY,gCAKtB,C,wDChBA,IA9C8BzB,IAAwB,IAAvB,MAAE2B,GAAQ,GAAO3B,EAC9C,OACEG,EAAAA,cAAA,OACEC,UAAY,oHAEZD,EAAAA,cAAA,OACEyB,GAAG,WACHxB,UAAY,kFACVuB,GAAU,wBAGZxB,EAAAA,cAAA,MACEyB,GAAG,gBACHxB,UAAU,4FAETuB,EAAQ,iBAAmB,aAE7BA,EACCxB,EAAAA,cAACc,EAAAA,KAAI,CAACC,GAAK,+BAAwBd,UAAW,gBAAgB,WAI9DD,EAAAA,cAAA,KACEyB,GAAG,kBACHxB,UAAU,kEACX,yCAKHuB,GACAxB,EAAAA,cAACc,EAAAA,KAAI,CACHC,GAAG,SACHd,UAAY,uEAEZD,EAAAA,cAAC0B,EAAAA,IAAa,CACZzB,UACE,0EAKJ,C,oICvBV,MAlB0CO,IACxC,MAAM,MAAEmB,EAAK,UAAEC,GAAcpB,EAC7B,OACER,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,WACEyB,GAAIE,EACJ1B,UAAY,yEACV2B,EAAY,SAAW,KAGzB5B,EAAAA,cAACmB,EAAAA,EAAU,CAACC,QAAS,MAAOO,GAC3BnB,EAAMK,WAEPe,GAAa5B,EAAAA,cAAC6B,EAAAA,EAAO,CAACC,GAAI,KAC3B,E,UCvBP,EAAe,IAA0B,8D,8BCS1B,SAASC,EAAWvB,GACjC,MAAM,KAAEC,EAAI,OAAEC,EAAM,KAAEsB,GAASxB,EACzByB,EAAoB,kEAC1B,MAAe,WAAXvB,EAEAV,EAAAA,cAAA,KAAGS,KAAMA,EAAMC,OAAQA,EAAQT,UAAWgC,GACvCD,GAKLhC,EAAAA,cAACc,EAAAA,KAAI,CAACC,GAAIN,EAAMR,UAAWgC,GACxBD,EAGP,CCkCA,MAjDwBE,IAEpBlC,EAAAA,cAACmC,EAAe,CAACR,MAAO,SACtB3B,EAAAA,cAAA,OAAKC,UAAU,4CACbD,EAAAA,cAAA,OACEoC,IAAKC,EACLpC,UAAW,2DAEbD,EAAAA,cAAA,WACEA,EAAAA,cAAA,KAAGC,UAAW,mBAAmB,uXAQjCD,EAAAA,cAACO,EAAAA,EAAM,CAACE,KAAM6B,mGAAoB5B,OAAQ,UAAU,eAGpDV,EAAAA,cAAC6B,EAAAA,EAAO,CAACU,GAAI,IACbvC,EAAAA,cAAA,OAAKC,UAAU,sCACbD,EAAAA,cAAC+B,EAAU,CACTtB,KAAK,4CACLC,OAAO,SACPsB,KAAMhC,EAAAA,cAACwC,EAAAA,IAAU,CAACvC,UAAW,cAE/BD,EAAAA,cAAC+B,EAAU,CACTtB,KAAK,gCACLC,OAAO,SACPsB,KAAMhC,EAAAA,cAACyC,EAAAA,IAAQ,CAACxC,UAAW,cAE7BD,EAAAA,cAAC+B,EAAU,CACTtB,KAAK,gCACLC,OAAO,SACPsB,KAAMhC,EAAAA,cAAC0C,EAAAA,IAAS,CAACzC,UAAW,cAE9BD,EAAAA,cAAC+B,EAAU,CACTtB,KAAK,gCACLC,OAAO,SACPsB,KAAMhC,EAAAA,cAAC2C,EAAAA,IAAO,CAAC1C,UAAW,kBCIxC,MA5CoCJ,IAAsB,IAArB,YAAE+C,GAAa/C,EAClD,OACEG,EAAAA,cAACmC,EAAe,CAACR,MAAO,cACrBiB,EAAYC,KAAI,CAACC,EAAYC,EAAGC,KAC/B,MAAMC,EAAWF,EAAI,IAAMC,EAAI/B,OAC/B,OACEjB,EAAAA,cAAA,OAAKkD,IAAKJ,EAAWrB,GAAIxB,UAAY,IAAEgD,EAAW,GAAK,UACrDjD,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAAA,OACEoC,IAAKU,EAAWK,KAAKC,KAAKC,IAC1BpD,UAAW,mBAEbD,EAAAA,cAAA,WACEA,EAAAA,cAAA,MAAIC,UAAU,iCACX6C,EAAWQ,UAEdtD,EAAAA,cAAA,MAAIC,UAAU,6CACX6C,EAAWS,WAIlBvD,EAAAA,cAAC6B,EAAAA,EAAO,MACR7B,EAAAA,cAAA,MAAIC,UAAU,SACX6C,EAAWU,iBAAiBX,KAAI,CAACY,EAAgBV,EAAGC,KACnD,MAAMC,EAAWF,EAAI,IAAMC,EAAI/B,OAC/B,OACEjB,EAAAA,cAAA,MACEkD,IAAM,GAAEJ,EAAWrB,MAAMgC,IACzBxD,UAAY,kBACVgD,EAAW,GAAK,qBAGjBQ,EACE,KAIP,IAGM,EC1CP,SAASC,EAAgBlD,GACtC,MAAM,QAAEmD,GAAYnD,EACpB,OACER,EAAAA,cAAA,KAAGS,KAAMkD,EAAQN,IAAK3C,OAAO,SAAST,UAAU,kBAC9CD,EAAAA,cAAA,OACEoC,IAAM,SAAQuB,EAAQC,MAAMR,KAAKC,MACjCQ,MAAM,OACN5D,UAAW,WAEbD,EAAAA,cAAA,OAAKC,UCfoB,6CDgBvBD,EAAAA,cAAA,OAAKC,UCf4B,uDDgB/BD,EAAAA,cAAA,KAAGC,UAAW,iCAAkC0D,EAAQhC,OACxD3B,EAAAA,cAAA,KAAGC,UAAW,WAAY0D,EAAQG,YAAYA,eAKxD,CEhBe,SAASC,EAAYvD,GAClC,MAAM,QAAEmD,GAAYnD,EACpB,OACER,EAAAA,cAAA,OACEkD,IAAKS,EAAQlC,GACbxB,UACE,8FAGFD,EAAAA,cAAA,WACEA,EAAAA,cAAA,MAAIC,UAAW,gCAAiC0D,EAAQhC,OACxD3B,EAAAA,cAAC6B,EAAAA,EAAO,CAACC,GAAI,EAAGS,GAAI,KAEtBvC,EAAAA,cAAA,KAAGC,UAAW,QAAS0D,EAAQG,YAAYA,aAC3C9D,EAAAA,cAACO,EAAAA,EAAM,CAACE,KAAMkD,EAAQN,IAAK3C,OAAQ,SAAUC,OAAQ,WAAW,QAKtE,CCVA,MAAMqD,EAA2B,CAC/BC,SAAU,CACRC,KAAM,WACNC,MAAO,GAETC,KAAM,CACJF,KAAM,OACNC,MAAO,IA4DX,MAnDkCtE,IAAyC,IAAxC,iBAAEwE,EAAgB,aAAEC,GAAczE,EACnE,MAAO0E,EAAYC,GAAiBxE,EAAAA,SAClCgE,EAAYC,SAASE,OAyBvB,OACEnE,EAAAA,cAACmC,EAAe,CAACR,MAAO,YACtB3B,EAAAA,cAAA,OAAKC,UAAU,mCACZwE,OAAOC,KAAKV,GAAanB,KAAKK,GAC7BlD,EAAAA,cAAA,UACEkD,IAAKc,EAAYd,GAAKiB,MACtBlE,UACEsE,IAAeP,EAAYd,GAAKiB,MAC5B,0DACA,OAENQ,QAASA,KAAMC,OAjCCT,EAiCgBH,EAAYd,GAAKiB,MAjCLK,EAAcL,GAA1CA,KAiCwC,GAEvDH,EAAYd,GAAKgB,SAIxBlE,EAAAA,cAAA,OAAKC,UAAU,4CApCbsE,IAAeP,EAAYC,SAASE,MAClCE,EAAiBpD,OAAS,EACrBoD,EAAiBxB,KAAKc,GAC3B3D,EAAAA,cAAC0D,EAAe,CAACR,IAAKS,EAAQlC,GAAIkC,QAASA,MAGtC3D,EAAAA,cAAA,SAAG,wBAGRsE,EAAarD,OAAS,EACjBqD,EAAazB,KAAKc,GACvB3D,EAAAA,cAAC+D,EAAW,CAACb,IAAKS,EAAQlC,GAAIkC,QAASA,MAGlC3D,EAAAA,cAAA,SAAG,yBAyBI,E,oBCzCtB,MA5BqCH,IAAsB,IAArB,KAAEgF,GAAahF,EACnD,MAAM,MAAE8B,EAAK,KAAE7B,EAAI,QAAEC,EAAO,KAAE+E,GAASD,EACvC,IAAI7D,EAAU+D,KAAKC,MAAMjF,EAAQkF,KAAKlF,QAAQmF,MAC3CC,GAAgC,cAAjBA,EAAIC,WACpBrF,QAAQ,GAAGoE,MACb,OACEnE,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,OACEoC,IAAM,WAAUyC,EAAKjB,MAAMR,KAAKC,MAChCQ,MAAM,OACNwB,OAAO,QACPC,IAAM,GAAET,EAAKlD,qBAEf3B,EAAAA,cAAA,MAAIC,UAAW,qBAAsB0B,GACrC3B,EAAAA,cAACuF,EAAAA,EAAmB,CAACzF,KAAMA,EAAMC,QAASA,EAAQkF,MAClDjF,EAAAA,cAACwF,EAAAA,EAAO,CAACxE,QAASA,IAClBhB,EAAAA,cAACc,EAAAA,KAAI,CACHC,GAAK,SAAQ+D,IACb7E,UACE,qFAEH,eAGG,ECVV,MAfqCJ,IAAuB,IAAtB,MAAE4F,GAAc5F,EACpD,OACEG,EAAAA,cAACmC,EAAe,CAACR,MAAO,QACtB3B,EAAAA,cAAA,OAAKC,UAAU,4CACZwF,EAAM5C,KAAK6C,GACV1F,EAAAA,cAAC2F,EAAW,CAACzC,IAAKwC,EAAKjE,GAAIoD,KAAMa,OAGrC1F,EAAAA,cAACO,EAAAA,EAAM,CAACE,KAAO,QAAQE,OAAQ,eAAe,YAG9B,E,8BCrBf,MAAMiF,EAAQ,CACjBC,QAAS,2BCDAC,EAAiB,CAACC,EAAWC,EAAWC,KACjD,IAAKF,EACD,KAAM,gFAEV,IAAKC,EACD,KAAM,wEAEV,IAAKC,EACD,KAAM,mFAEV,OAAO,CAAI,ECVR,MAAMC,EACT,WAAAC,CAAYC,GACRC,KAAKC,OAASF,EAAeA,EAAaE,OAAS,EACnDD,KAAK/F,KAAO8F,EAAeA,EAAaG,aAAe,eAC3D,ECFG,MAAMC,EAAW,CAACnD,EAAKwB,EAAM4B,EAAU,CAAC,IACpC,IAAIC,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,iBAAiB,QAAQ,EAAGrG,aAC5B,MAAMsG,EAAiB,IAAId,EAAsBxF,GACnB,MAA1BsG,EAAeV,QAA0C,OAAxBU,EAAe1G,KAChDqG,EAAQK,GAGRJ,EAAOI,EACX,IAEJH,EAAIE,iBAAiB,SAAS,EAAGrG,aAC7BkG,EAAO,IAAIV,EAAsBxF,GAAQ,IAE7CmG,EAAII,KAAK,OAAQrB,EAAMC,QAAUxC,GAAK,GACtCoB,OAAOC,KAAK+B,GAASS,SAAShE,IAC1B2D,EAAIM,iBAAiBjE,EAAKuD,EAAQvD,GAAK,IAE3C2D,EAAIO,KAAKvC,EAAK,ICjBtB,MCoBwB,CAACmB,EAAWC,EAAYoB,EAAMtB,KAClD,MAAMuB,EAAMvB,GAAaH,EAAM2B,QACzBC,EAvBW,CAACH,IAClB,IAAIG,EAOJ,GALIA,EADgB,iBAATH,EACOI,SAASC,cAAcL,GAGvBA,GAEbG,GAAwC,SAAzBA,EAAYG,SAC5B,KAAM,0FAEV,OAAOH,CAAW,EAYEI,CAAaP,GACjCvB,EAAewB,EAAKtB,EAAWC,GAC/B,MAAM4B,EAAW,IAAIC,SAASN,GAK9B,OAJAK,EAASE,OAAO,cAAe,UAC/BF,EAASE,OAAO,aAAc/B,GAC9B6B,EAASE,OAAO,cAAe9B,GAC/B4B,EAASE,OAAO,UAAWT,GACpBd,EAAS,4BAA6BqB,EAAS,E,UC/B3C,SAASG,IACtB,OACEhI,EAAAA,cAAA,UACEyB,GAAG,MACHxB,UAAU,6BACVmC,IAAM,oHACN6F,iBAAe,GAGrB,CCuKA,MAvK0BC,KACxB,MAAMb,GAAOc,EAAAA,EAAAA,QAAO,OAEbC,EAAQC,GAAarI,EAAAA,SAAe,CACzCkE,KAAM,GACNoE,MAAO,GACPC,QAAS,MAGL,YAAEC,EAAW,eAAEC,IAAwBC,EAAAA,EAAAA,YAAWC,EAAAA,GAElDC,EAAkBC,IACtBA,EAAMC,UACNT,GAAWU,IAAI,IACVA,EACH,CAACF,EAAMnI,OAAOe,IAAKoH,EAAMnI,OAAOyD,SAC/B,EAqCC6E,EAAcA,KAClBX,EAAU,CACRnE,KAAM,GACNoE,MAAO,GACPC,QAAS,IACT,EAGEU,EAAgC,CACpC,CACExH,GAAI,UACJyC,KAAM,UACNgF,KAAM,SACN/E,MAAO,QAET,CACE1C,GAAI,YACJyC,KAAM,YACNgF,KAAM,SACN/E,MAAO,wBAET,CACE1C,GAAI,OACJyC,KAAM,YACNiF,YAAa,QACbhF,MAAOiE,EAAOlE,KACdkF,SAAUR,EACVS,UAAU,GAEZ,CACE5H,GAAI,QACJyC,KAAM,WACNgF,KAAM,QACNC,YAAa,UACbhF,MAAOiE,EAAOE,MACdc,SAAUR,EACVS,UAAU,GAEZ,CACE5H,GAAI,UACJyC,KAAM,UACNiF,YAAa,WACbhF,MAAOiE,EAAOG,QACda,SAAUR,EACVU,KAAM,EACND,UAAU,IAIRE,EACJ,wGAEF,OACEvJ,EAAAA,cAACmC,EAAe,CAACR,MAAO,UAAWC,WAAS,GAC1C5B,EAAAA,cAAA,OAAKC,UAAU,6BACbD,EAAAA,cAAA,QACEwJ,IAAKnC,EACLoC,SA3FgBZ,IACtBA,EAAMa,iBACN,MAAMlC,EAAcH,EAAKsC,QACN,MAAfnC,IAEJiB,EAAe,CAAEmB,YAAY,IAC7BC,EAEK,kBACA,mBACDrC,EACC,qBAEFsC,MACEC,KACCC,EAAAA,EAAAA,IACEvB,EACAsB,EAAOzD,OACP,8BAEF0C,IACAiB,QAAQC,IAAIH,EAAOzJ,KAAK,IAEzB6J,KACCH,EAAAA,EAAAA,IACEvB,EACA0B,EAAM7D,OACN,qDAEF2D,QAAQC,IAAIC,EAAM,IAErB,EA6DGC,YAAU,EACVC,aAAa,OAEZpB,EAAcpG,KAAKyH,GACbA,EAAMhB,KAUTtJ,EAAAA,cAAA,WAAAyE,OAAA8F,OAAA,CACErH,IAAKoH,EAAM7I,IACP6I,EAAK,CACTrK,UAAWsJ,KAXXvJ,EAAAA,cAAA,QAAAyE,OAAA8F,OAAA,CACErH,IAAKoH,EAAM7I,IACP6I,EAAK,CACTrK,UAAWsJ,OAYnBvJ,EAAAA,cAAA,OAAKC,UAAW,oBACdD,EAAAA,cAAA,UACEkJ,KAAK,SACLjJ,UACE,6IAEFuK,SAAUhC,EAAYoB,YAEpBpB,EAAYoB,WAMZ5J,EAAAA,cAACyK,EAAAA,IAAyB,CAACxK,UAAU,4CALrCD,EAAAA,cAAA,OAAKC,UAAU,4BACbD,EAAAA,cAAC0K,EAAAA,IAAQ,CAACzK,UAAU,eAAeE,MAAO,UAC1CH,EAAAA,cAAA,YAAM,UAMZA,EAAAA,cAAA,UACEkJ,KAAM,QACNjJ,UAAU,sKACV0E,QAASqE,GAEThJ,EAAAA,cAAA,OAAKC,UAAU,4BACbD,EAAAA,cAAC2K,EAAAA,IAAO,CAAC1K,UAAU,iBACnBD,EAAAA,cAAA,YAAM,aAKdA,EAAAA,cAACgI,EAAS,OAEI,EChHtB,MAlCmCnI,IAE7B,IADJgF,MAAM,wBAAE+F,EAAuB,kBAAEC,EAAiB,sBAAEC,IACrDjL,EACC,MAAM+C,GAA4BmI,EAAAA,EAAAA,IAAUH,EAAwBI,OAC9D1G,GAA0B2G,EAAAA,EAAAA,IAC9BH,EAAsBE,MAAME,QACzBvH,IAAiD,IAA5BA,EAAQwH,mBAG5B9G,GAA8B4G,EAAAA,EAAAA,IAClCH,EAAsBE,MAAME,QACzBvH,IAAiD,IAA5BA,EAAQwH,mBAG5B1F,EAAgBoF,EAAkBG,MAExC,OACEhL,EAAAA,cAACoL,EAAAA,EAAa,CACZzJ,MAAQ,4BACRlB,KAAO,gCAEPT,EAAAA,cAACqL,EAAAA,EAAI,MACLrL,EAAAA,cAACkC,EAAK,MACNlC,EAAAA,cAACsL,EAAU,CAAC1I,YAAaA,IACzB5C,EAAAA,cAACuL,EAAQ,CACPlH,iBAAkBA,EAClBC,aAAcA,IAEhBtE,EAAAA,cAACwL,EAAW,CAAC/F,MAAOA,IACpBzF,EAAAA,cAACkI,EAAO,MACM,C","sources":["webpack://cris-noel/./src/components/BlogPreviewMetaData.tsx","webpack://cris-noel/./src/components/Button.tsx","webpack://cris-noel/./src/components/Excerpt.tsx","webpack://cris-noel/./src/components/HeaderText.tsx","webpack://cris-noel/./src/components/Hero.tsx","webpack://cris-noel/./src/components/HomePageSection.tsx","webpack://cris-noel/./src/images/profile_picture.jpg","webpack://cris-noel/./src/components/IconButton.tsx","webpack://cris-noel/./src/components/Sections/About.tsx","webpack://cris-noel/./src/components/Sections/Experience.tsx","webpack://cris-noel/./src/components/PersonalProject.tsx","webpack://cris-noel/./src/styles/Sections/projects.module.css","webpack://cris-noel/./src/components/WorkProject.tsx","webpack://cris-noel/./src/components/Sections/Projects.tsx","webpack://cris-noel/./src/components/BlogPreview.tsx","webpack://cris-noel/./src/components/Sections/BlogSection.tsx","webpack://cris-noel/./node_modules/@emailjs/browser/es/store/store.js","webpack://cris-noel/./node_modules/@emailjs/browser/es/utils/validateParams.js","webpack://cris-noel/./node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","webpack://cris-noel/./node_modules/@emailjs/browser/es/api/sendPost.js","webpack://cris-noel/./node_modules/@emailjs/browser/es/index.js","webpack://cris-noel/./node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","webpack://cris-noel/./src/components/GoogleMap.tsx","webpack://cris-noel/./src/components/Sections/Contact.tsx","webpack://cris-noel/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { FaBookmark, FaClock } from \"react-icons/fa6\";\nimport { estimatedReadTime } from \"../Utils\";\n\ninterface Props {\n  date: any;\n  content: any;\n}\n\nconst BlogPreviewMetaData: React.FC<Props> = ({ date, content }) => {\n  return (\n    <div className=\"flex\">\n      <div className={\"flex items-center mr-3\"}>\n        <FaBookmark color=\"orange\" className={\"h-4 w-4 mr-1\"} />\n        <p className={\"text-xs\"}>{date}</p>\n      </div>\n      <div className={\"flex items-center\"}>\n        <FaClock color=\"yellowgreen\" className={\"h-4 w-4 mr-1\"} />\n        <p className={\"text-xs\"}>{estimatedReadTime(content).text}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogPreviewMetaData;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\ninterface Props {\n  href?: string;\n  target?: string;\n  styles?: string;\n  children: string;\n}\n\nexport default function Button(props: Props) {\n  const { href, target, styles } = props;\n  const buttonStyles = `block bg-primary hover:bg-primary-800 transition ease-in-out text-white rounded p-2 text-center ${\n    styles && styles\n  }`;\n\n  if (href) {\n    if (target && target === \"_blank\") {\n      return (\n        <a href={href} target={target} className={buttonStyles}>\n          {props.children}\n        </a>\n      );\n    } else {\n      return (\n        <Link to={href} target={target} className={buttonStyles}>\n          {props.children}\n        </Link>\n      );\n    }\n  }\n  return <button className={buttonStyles}>{props.children}</button>;\n}\n","import React from \"react\";\n\ninterface Props {\n  excerpt: string;\n}\n\nconst Excerpt: React.FC<Props> = ({ excerpt }) => {\n  return (\n    <p className=\"mt-3 mb-5 text-left\">\n      {excerpt.length > 230 ? `${excerpt.slice(0, 230)}...` : excerpt}\n    </p>\n  );\n};\n\nexport default Excerpt;\n","import React from \"react\";\n\ninterface Props {\n  children: string;\n  variant?: string;\n  align?: string;\n}\n\nexport default function HeaderText(props: Props) {\n  const { variant, align } = props;\n  const renderVariant = () => {\n    switch (variant) {\n      case \"h2\":\n        return (\n          <h2 className=\"permanentMarker mt-20 text-4xl capitalize\">\n            {props.children}\n          </h2>\n        );\n      case \"h3\":\n        return (\n          <h3 className=\"permanentMarker mt-20 text-3xl capitalize\">\n            {props.children}\n          </h3>\n        );\n      case \"h4\":\n        return (\n          <h4 className=\"permanentMarker mt-20 text-2xl capitalize\">\n            {props.children}\n          </h4>\n        );\n      case \"h5\":\n        return (\n          <h5 className=\"permanentMarker mt-20 text-xl capitalize\">\n            {props.children}\n          </h5>\n        );\n      case \"h6\":\n        return (\n          <h6 className=\"permanentMarker mt-20 text-xl capitalize\">\n            {props.children}\n          </h6>\n        );\n      default:\n        return (\n          <h1 className=\"permanentMarker mt-20 text-5xl capitalize\">\n            {props.children}\n          </h1>\n        );\n    }\n  };\n  const textAlign = () => {\n    switch (align) {\n      case \"left\":\n        return [\"text-left\", \"mr-auto\"];\n      case \"right\":\n        return [\"text-right\", \"ml-auto\"];\n      default:\n        return [\"text-center\", \"mx-auto\"];\n    }\n  };\n  return (\n    <div className={`${textAlign()[0]}`}>\n      {renderVariant()}\n      <span\n        className={`block h-[5px] w-[55px] mt-0 ${\n          textAlign()[1]\n        } lg:mt-3 mb-20 bg-red-700`}\n      ></span>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { FaChevronDown } from \"react-icons/fa6\";\nimport { Link } from \"gatsby\";\n\ninterface Props {\n  is404?: boolean;\n}\n\nconst Hero: React.FC<Props> = ({ is404 = false }) => {\n  return (\n    <div\n      className={`relative bg-[url('../images/hero.jpg')] bg-cover bg-center bg-no-repeat h-screen bg-blend-overlay bg-black/[0.4]`}\n    >\n      <div\n        id=\"hero-mid\"\n        className={`absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-center w-full ${\n          is404 && `p-8 bg-black/[0.6]`\n        }`}\n      >\n        <h1\n          id=\"hero-headline\"\n          className=\"permanentMarker font-semibold text-4xl w-full md:text-6xl text-white mb-3 tracking-wider\"\n        >\n          {is404 ? \"Page Not Found\" : \"CRIS NOEL\"}\n        </h1>\n        {is404 ? (\n          <Link to={`${process.env.DOMAIN}`} className={\"text-red-700\"}>\n            Go Home\n          </Link>\n        ) : (\n          <p\n            id=\"hero-subheading\"\n            className=\"text-white text-xs md:text-base mt-5 font-medium tracking-wide\"\n          >\n            WEB DEVELOPER - CAVITE, PHILIPPINES\n          </p>\n        )}\n      </div>\n      {!is404 && (\n        <Link\n          to=\"#about\"\n          className={`absolute top-[90%] left-[50%] -translate-x-[50%] -translate-y-[90%]`}\n        >\n          <FaChevronDown\n            className={\n              \"text-white bg-black/[0.8] w-8 h-8 my-0 mx-auto mt-3 rounded-full p-2\"\n            }\n          />\n        </Link>\n      )}\n    </div>\n  );\n};\n\nexport default Hero;\n","import * as React from \"react\";\nimport HeaderText from \"./HeaderText\";\nimport Divider from \"./Divider\";\n\ninterface Props {\n  title: string;\n  noDivider?: boolean;\n  children: any;\n}\nconst HomePageSection: React.FC<Props> = (props) => {\n  const { title, noDivider } = props;\n  return (\n    <>\n      <section\n        id={title}\n        className={`mx-auto max-w-xs md:max-w-3xl lg:max-w-7xl lg:min-w-7xl px-2 sm:px-12${\n          noDivider ? \" pb-20\" : \"\"\n        }`}\n      >\n        <HeaderText variant={\"h2\"}>{title}</HeaderText>\n        {props.children}\n      </section>\n      {!noDivider && <Divider mt={20} />}\n    </>\n  );\n};\n\nexport default HomePageSection;\n","export default __webpack_public_path__ + \"static/profile_picture-2608f3c0a95dc5b6649fe42d33f9695e.jpg\";","import React from \"react\";\nimport { Link } from \"gatsby\";\n\ninterface Props {\n  href: string;\n  target: string;\n  icon: any;\n}\n\nexport default function IconButton(props: Props) {\n  const { href, target, icon } = props;\n  const iconButtonStyles = `p-2 rounded-full hover:bg-neutral-200 dark:hover:bg-neutral-700`;\n  if (target === \"_blank\") {\n    return (\n      <a href={href} target={target} className={iconButtonStyles}>\n        {icon}\n      </a>\n    );\n  }\n  return (\n    <Link to={href} className={iconButtonStyles}>\n      {icon}\n    </Link>\n  );\n}\n","import React from \"react\";\nimport HomePageSection from \"../HomePageSection\";\nimport Button from \"../Button\";\nimport ProfilePicture from \"../../images/profile_picture.jpg\";\nimport { FaCodepen, FaLinkedin, FaGithub } from \"react-icons/fa\";\nimport { MdEmail } from \"react-icons/md\";\nimport IconButton from \"../IconButton\";\nimport Divider from \"../Divider\";\n\nconst About: React.FC = () => {\n  return (\n    <HomePageSection title={\"about\"}>\n      <div className=\"flex flex-col lg:flex-row lg:items-start\">\n        <img\n          src={ProfilePicture}\n          className={\"rounded h-36 w-36 mx-auto mb-5 lg:mr-8 lg:h-80 lg:w-80\"}\n        />\n        <div>\n          <p className={\"md:text-xl mb-5\"}>\n            What's up, I'm Cris and I'm a Web Developer currently based in the\n            Philippines. I have a passion for building websites and learning\n            more about new frameworks and languages that I haven't mastered yet.\n            I'm well versed in both front-end and back-end development. I'm\n            currently accepting freelance work, if you're in need of a website,\n            I'm your guy, feel free to contact me.\n          </p>\n          <Button href={process.env.RESUME} target={\"_blank\"}>\n            View Resume\n          </Button>\n          <Divider mb={2} />\n          <div className=\"flex justify-evenly md:inline-flex\">\n            <IconButton\n              href=\"https://www.linkedin.com/in/crisncancino/\"\n              target=\"_blank\"\n              icon={<FaLinkedin className={\"h-5 w-5\"} />}\n            />\n            <IconButton\n              href=\"https://github.com/crisnoel12\"\n              target=\"_blank\"\n              icon={<FaGithub className={\"h-5 w-5\"} />}\n            />\n            <IconButton\n              href=\"https://codepen.io/crisnoel12\"\n              target=\"_blank\"\n              icon={<FaCodepen className={\"h-5 w-5\"} />}\n            />\n            <IconButton\n              href=\"mailto:crisncancino@gmail.com\"\n              target=\"_blank\"\n              icon={<MdEmail className={\"h-5 w-5\"} />}\n            />\n          </div>\n        </div>\n      </div>\n    </HomePageSection>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { EXPERIENCE } from \"../../Types\";\nimport HomePageSection from \"../HomePageSection\";\nimport Divider from \"../Divider\";\n\ninterface Props {\n  experiences: EXPERIENCE[];\n}\n\nconst Experience: React.FC<Props> = ({ experiences }) => {\n  return (\n    <HomePageSection title={\"experience\"}>\n      {experiences.map((experience, i, row) => {\n        const lastItem = i + 1 === row.length;\n        return (\n          <div key={experience.id} className={`${lastItem ? \"\" : \"mb-20\"}`}>\n            <div className=\"inline-flex\">\n              <img\n                src={experience.logo.file.url}\n                className={\"h-16 w-16 mr-5\"}\n              />\n              <div>\n                <h5 className=\"font-bold text-xl lg:text-2xl\">\n                  {experience.position}\n                </h5>\n                <h6 className=\"font-semibold text-neutral-500 lg:text-lg\">\n                  {experience.company}\n                </h6>\n              </div>\n            </div>\n            <Divider />\n            <ul className=\"pl-10\">\n              {experience.responsibilities.map((responsibility, i, row) => {\n                const lastItem = i + 1 === row.length;\n                return (\n                  <li\n                    key={`${experience.id}_${responsibility}`}\n                    className={`list-disc mt-5 ${\n                      lastItem ? \"\" : \"mb-5\"\n                    } lg:text-lg`}\n                  >\n                    {responsibility}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        );\n      })}\n    </HomePageSection>\n  );\n};\n\nexport default Experience;\n","import React from \"react\";\nimport { PROJECT } from \"../Types\";\nimport * as projectSectionStyles from \"../styles/Sections/projects.module.css\";\n\ninterface Props {\n  project: PROJECT;\n}\nexport default function PersonalProject(props: Props) {\n  const { project } = props;\n  return (\n    <a href={project.url} target=\"_blank\" className=\"block relative\">\n      <img\n        src={`https:${project.image.file.url}`}\n        width=\"100%\"\n        className={\"h-full\"}\n      />\n      <div className={projectSectionStyles.personalProjectBG}>\n        <div className={projectSectionStyles.personalProjectTxtContainer}>\n          <p className={\"permanentMarker text-2xl mb-4\"}>{project.title}</p>\n          <p className={\"text-sm\"}>{project.description.description}</p>\n        </div>\n      </div>\n    </a>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var personalProjectBG = \"projects-module--personalProjectBG--5ae4d\";\nexport var personalProjectTxtContainer = \"projects-module--personalProjectTxtContainer--38f53\";","import React from \"react\";\nimport { PROJECT } from \"../Types\";\nimport Divider from \"./Divider\";\nimport Button from \"./Button\";\n\ninterface Props {\n  project: PROJECT;\n}\nexport default function WorkProject(props: Props) {\n  const { project } = props;\n  return (\n    <div\n      key={project.id}\n      className={\n        \"flex flex-col border-solid border-2 border-neutral-300 dark:border-neutral-600 rounded p-6\"\n      }\n    >\n      <div>\n        <h6 className={\"permanentMarker text-lg mb-2\"}>{project.title}</h6>\n        <Divider mt={2} mb={2} />\n      </div>\n      <p className={\"mb-8\"}>{project.description.description}</p>\n      <Button href={project.url} target={\"_blank\"} styles={\"mt-auto\"}>\n        VIEW\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { PROJECT } from \"../../Types\";\nimport HomePageSection from \"../HomePageSection\";\nimport PersonalProject from \"../PersonalProject\";\nimport WorkProject from \"../WorkProject\";\n\nenum ProjectTypeValue {\n  zero = 0,\n  one = 1,\n}\ninterface ProjectType {\n  [key: string]: {\n    name: string;\n    value: ProjectTypeValue;\n  };\n}\n\nconst projectType: ProjectType = {\n  personal: {\n    name: \"Personal\",\n    value: 0,\n  },\n  work: {\n    name: \"Work\",\n    value: 1,\n  },\n};\n\ninterface Props {\n  personalProjects: PROJECT[];\n  workProjects: PROJECT[];\n}\n\nconst Projects: React.FC<Props> = ({ personalProjects, workProjects }) => {\n  const [projectTab, setProjectTab] = React.useState(\n    projectType.personal.value\n  );\n\n  const changeProjectTab = (value: ProjectTypeValue) => setProjectTab(value);\n\n  const renderProjectType = () => {\n    if (projectTab === projectType.personal.value) {\n      if (personalProjects.length > 0) {\n        return personalProjects.map((project) => (\n          <PersonalProject key={project.id} project={project} />\n        ));\n      } else {\n        return <p>No Projects to show.</p>;\n      }\n    } else {\n      if (workProjects.length > 0) {\n        return workProjects.map((project) => (\n          <WorkProject key={project.id} project={project} />\n        ));\n      } else {\n        return <p>No Projects to show.</p>;\n      }\n    }\n  };\n\n  return (\n    <HomePageSection title={\"projects\"}>\n      <div className=\"grid grid-cols-2 justify-center\">\n        {Object.keys(projectType).map((key) => (\n          <button\n            key={projectType[key].value}\n            className={\n              projectTab === projectType[key].value\n                ? \"font-medium text-red-800 border-b-2 border-red-800 mb-5\"\n                : \"mb-5\"\n            }\n            onClick={() => changeProjectTab(projectType[key].value)}\n          >\n            {projectType[key].name}\n          </button>\n        ))}\n      </div>\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n        {renderProjectType()}\n      </div>\n    </HomePageSection>\n  );\n};\n\nexport default Projects;\n","import React from \"react\";\nimport { POST } from \"../Types\";\nimport Excerpt from \"./Excerpt\";\nimport BlogPreviewMetaData from \"./BlogPreviewMetaData\";\nimport { Link } from \"gatsby\";\nimport { Block } from \"@contentful/rich-text-types\";\n\ninterface Props {\n  data: POST;\n}\n\nconst BlogPreview: React.FC<Props> = ({ data }: Props) => {\n  const { title, date, content, slug } = data;\n  let excerpt = JSON.parse(content.raw).content.find(\n    (obj: Block) => obj.nodeType === \"paragraph\"\n  ).content[0].value;\n  return (\n    <div className=\"flex flex-col\">\n      <img\n        src={`https://${data.image.file.url}`}\n        width=\"100%\"\n        height=\"200px\"\n        alt={`${data.title} Main Image`}\n      />\n      <h5 className={\"text-xl mt-3 mb-3\"}>{title}</h5>\n      <BlogPreviewMetaData date={date} content={content.raw} />\n      <Excerpt excerpt={excerpt} />\n      <Link\n        to={`/blog/${slug}`}\n        className={\n          \"mt-3 text-sm text-left text-primary hover:text-primary-800 transition ease-in-out\"\n        }\n      >\n        Read More →\n      </Link>\n    </div>\n  );\n};\n\nexport default BlogPreview;\n","import React from \"react\";\nimport { POST } from \"../../Types\";\nimport HomePageSection from \"../HomePageSection\";\nimport BlogPreview from \"../BlogPreview\";\nimport Button from \"../Button\";\n\ninterface Props {\n  posts: POST[];\n}\n\nconst BlogSection: React.FC<Props> = ({ posts }: Props) => {\n  return (\n    <HomePageSection title={\"blog\"}>\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n        {posts.map((post) => (\n          <BlogPreview key={post.id} data={post} />\n        ))}\n      </div>\n      <Button href={`/blog`} styles={\"w-full mt-8\"}>\n        View All\n      </Button>\n    </HomePageSection>\n  );\n};\n\nexport default BlogSection;\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.11.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React from \"react\";\n\nexport default function GoogleMap() {\n  return (\n    <iframe\n      id=\"map\"\n      className=\"w-full h-[375px] lg:h-full\"\n      src={`https://www.google.com/maps/embed/v1/place?key=${process.env.GOOGLE_API_KEY}&q=Cavite&maptype=satellite`}\n      allowFullScreen\n    ></iframe>\n  );\n}\n","import React, { useContext, useRef } from \"react\";\nimport HomePageSection from \"../HomePageSection\";\nimport { IoMdSend } from \"react-icons/io\";\nimport { BiReset } from \"react-icons/bi\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport emailjs from \"@emailjs/browser\";\nimport ServerStateContext from \"../../context/ServerStateContext\";\nimport { ContactField } from \"../../Types\";\nimport GoogleMap from \"../GoogleMap\";\nimport { handleServerResponse } from \"../../Utils\";\n\nconst Contact: React.FC = () => {\n  const form = useRef(null);\n\n  const [inputs, setInputs] = React.useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  });\n\n  const { serverState, setServerState }: any = useContext(ServerStateContext);\n\n  const handleOnChange = (event: any) => {\n    event.persist();\n    setInputs((prev) => ({\n      ...prev,\n      [event.target.id]: event.target.value,\n    }));\n  };\n\n  const handleOnSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const currentForm = form.current;\n    if (currentForm == null) return;\n\n    setServerState({ submitting: true });\n    emailjs\n      .sendForm(\n        `${process.env.EMAILJS_SERVICE_ID}`,\n        `${process.env.EMAILJS_TEMPLATE_ID}`,\n        currentForm,\n        `${process.env.EMAILJS_PUBLIC_ID}`\n      )\n      .then(\n        (result) => {\n          handleServerResponse(\n            setServerState,\n            result.status,\n            \"Message sent successfully!\"\n          );\n          handleReset();\n          console.log(result.text);\n        },\n        (error) => {\n          handleServerResponse(\n            setServerState,\n            error.status,\n            \"There was an error trying to submit your request.\"\n          );\n          console.log(error);\n        }\n      );\n  };\n\n  const handleReset = () => {\n    setInputs({\n      name: \"\",\n      email: \"\",\n      message: \"\",\n    });\n  };\n\n  const contactFields: ContactField[] = [\n    {\n      id: \"to_name\",\n      name: \"to_name\",\n      type: \"hidden\",\n      value: \"Cris\",\n    },\n    {\n      id: \"from_name\",\n      name: \"from_name\",\n      type: \"hidden\",\n      value: \"crisnoel12.github.io\",\n    },\n    {\n      id: \"name\",\n      name: \"user_name\",\n      placeholder: \"NAME*\",\n      value: inputs.name,\n      onChange: handleOnChange,\n      required: true,\n    },\n    {\n      id: \"email\",\n      name: \"reply_to\",\n      type: \"email\",\n      placeholder: \"E-MAIL*\",\n      value: inputs.email,\n      onChange: handleOnChange,\n      required: true,\n    },\n    {\n      id: \"message\",\n      name: \"message\",\n      placeholder: \"MESSAGE*\",\n      value: inputs.message,\n      onChange: handleOnChange,\n      rows: 8,\n      required: true,\n    },\n  ];\n\n  const contactFieldClassName =\n    \"w-full mb-3 p-5 bg-neutral-200 dark:bg-neutral-800 border-solid border-b-2 border-neutral-500 rounded\";\n\n  return (\n    <HomePageSection title={\"contact\"} noDivider>\n      <div className=\"grid lg:grid-cols-2 gap-4\">\n        <form\n          ref={form}\n          onSubmit={handleOnSubmit}\n          noValidate\n          autoComplete=\"off\"\n        >\n          {contactFields.map((field: ContactField) => {\n            if (!field.rows) {\n              return (\n                <input\n                  key={field.id}\n                  {...field}\n                  className={contactFieldClassName}\n                />\n              );\n            }\n            return (\n              <textarea\n                key={field.id}\n                {...field}\n                className={contactFieldClassName}\n              />\n            );\n          })}\n          <div className={\"flex justify-end\"}>\n            <button\n              type=\"submit\"\n              className={\n                \"bg-red-700 border-2 border-red-700 hover:bg-red-800 hover:border-red-800 transition ease-in-out w-full lg:w-36 p-2 rounded text-white mr-2\"\n              }\n              disabled={serverState.submitting}\n            >\n              {!serverState.submitting ? (\n                <div className=\"inline-flex items-center\">\n                  <IoMdSend className=\"h-5 w-5 mr-2\" color={\"white\"} />\n                  <span>SEND</span>\n                </div>\n              ) : (\n                <AiOutlineLoading3Quarters className=\"animate-spin h-5 w-5 text-white mx-auto\" />\n              )}\n            </button>\n            <button\n              type={\"reset\"}\n              className=\"border-2 border-black hover:bg-black hover:text-white dark:border-white dark:hover:bg-white dark:hover:text-black transition ease-in-out w-full lg:w-36 p-2 rounded\"\n              onClick={handleReset}\n            >\n              <div className=\"inline-flex items-center\">\n                <BiReset className=\"h-5 w-5 mr-2\" />\n                <span>RESET</span>\n              </div>\n            </button>\n          </div>\n        </form>\n        <GoogleMap />\n      </div>\n    </HomePageSection>\n  );\n};\n\nexport default Contact;\n","import * as React from \"react\";\nimport type { PageProps } from \"gatsby\";\nimport { graphql } from \"gatsby\";\nimport { sortByASC, sortByDESC } from \"../Utils/index\";\nimport { EXPERIENCE, POST, PROJECT } from \"../Types\";\nimport MainContainer from \"../components/MainContainer\";\nimport Hero from \"../components/Hero\";\nimport About from \"../components/Sections/About\";\nimport Experience from \"../components/Sections/Experience\";\nimport Projects from \"../components/Sections/Projects\";\nimport BlogSection from \"../components/Sections/BlogSection\";\nimport Contact from \"../components/Sections/Contact\";\nimport Project from \"../Types/Project\";\n\ninterface Props extends PageProps {\n  data: {\n    allContentfulExperience: {\n      nodes: EXPERIENCE[];\n    };\n    allContentfulProjects: {\n      nodes: PROJECT[];\n    };\n    allContentfulPost: {\n      nodes: POST[];\n    };\n  };\n}\n\nconst IndexPage: React.FC<Props> = ({\n  data: { allContentfulExperience, allContentfulPost, allContentfulProjects },\n}) => {\n  const experiences: EXPERIENCE[] = sortByASC(allContentfulExperience.nodes);\n  const workProjects: PROJECT[] = sortByDESC(\n    allContentfulProjects.nodes.filter(\n      (project: Project) => project.personalProject === false\n    )\n  );\n  const personalProjects: PROJECT[] = sortByDESC(\n    allContentfulProjects.nodes.filter(\n      (project: Project) => project.personalProject === true\n    )\n  );\n  const posts: POST[] = allContentfulPost.nodes;\n\n  return (\n    <MainContainer\n      title={`Cris Noel | Web Developer`}\n      href={`${process.env.DOMAIN}`}\n    >\n      <Hero />\n      <About />\n      <Experience experiences={experiences} />\n      <Projects\n        personalProjects={personalProjects}\n        workProjects={workProjects}\n      />\n      <BlogSection posts={posts} />\n      <Contact />\n    </MainContainer>\n  );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query Data {\n    allContentfulExperience {\n      nodes {\n        id\n        contentful_id\n        position\n        company\n        responsibilities\n        createdAt\n        logo {\n          file {\n            url\n          }\n        }\n      }\n    }\n    allContentfulProjects {\n      nodes {\n        id\n        contentful_id\n        title\n        description {\n          description\n        }\n        technologies\n        personalProject\n        url\n        createdAt\n        image {\n          file {\n            url\n          }\n        }\n      }\n    }\n    allContentfulPost(limit: 3, sort: { date: DESC }) {\n      nodes {\n        id\n        contentful_id\n        date(formatString: \"MMMM Do, YYYY\")\n        title\n        slug\n        image {\n          file {\n            url\n          }\n        }\n        content {\n          raw\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","date","content","React","className","FaBookmark","color","FaClock","estimatedReadTime","text","Button","props","href","target","styles","buttonStyles","children","Link","to","excerpt","length","slice","HeaderText","variant","align","textAlign","renderVariant","is404","id","FaChevronDown","title","noDivider","Divider","mt","IconButton","icon","iconButtonStyles","About","HomePageSection","src","ProfilePicture","process","mb","FaLinkedin","FaGithub","FaCodepen","MdEmail","experiences","map","experience","i","row","lastItem","key","logo","file","url","position","company","responsibilities","responsibility","PersonalProject","project","image","width","description","WorkProject","projectType","personal","name","value","work","personalProjects","workProjects","projectTab","setProjectTab","Object","keys","onClick","changeProjectTab","data","slug","JSON","parse","raw","find","obj","nodeType","height","alt","BlogPreviewMetaData","Excerpt","posts","post","BlogPreview","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","responseText","sendPost","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","responseStatus","open","forEach","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","GoogleMap","allowFullScreen","Contact","useRef","inputs","setInputs","email","message","serverState","setServerState","useContext","ServerStateContext","handleOnChange","event","persist","prev","handleReset","contactFields","type","placeholder","onChange","required","rows","contactFieldClassName","ref","onSubmit","preventDefault","current","submitting","emailjs","then","result","handleServerResponse","console","log","error","noValidate","autoComplete","field","assign","disabled","AiOutlineLoading3Quarters","IoMdSend","BiReset","allContentfulExperience","allContentfulPost","allContentfulProjects","sortByASC","nodes","sortByDESC","filter","personalProject","MainContainer","Hero","Experience","Projects","BlogSection"],"sourceRoot":""}