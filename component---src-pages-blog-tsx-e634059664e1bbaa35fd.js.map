{"version":3,"file":"component---src-pages-blog-tsx-e634059664e1bbaa35fd.js","mappings":"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","sources":["webpack://cris-noel/./src/components/BlogPreviewMetaData.tsx","webpack://cris-noel/./src/components/Button.tsx","webpack://cris-noel/./src/components/Excerpt.tsx","webpack://cris-noel/./src/components/HeaderText.tsx","webpack://cris-noel/./src/pages/blog.tsx"],"sourcesContent":["import React from \"react\";\nimport { FaBookmark, FaClock } from \"react-icons/fa6\";\nimport { estimatedReadTime } from \"../Utils\";\n\ninterface Props {\n  date: any;\n  content: any;\n}\n\nconst BlogPreviewMetaData: React.FC<Props> = ({ date, content }) => {\n  return (\n    <div className=\"flex\">\n      <div className={\"flex items-center mr-3\"}>\n        <FaBookmark color=\"orange\" className={\"h-4 w-4 mr-1\"} />\n        <p className={\"text-xs\"}>{date}</p>\n      </div>\n      <div className={\"flex items-center\"}>\n        <FaClock color=\"yellowgreen\" className={\"h-4 w-4 mr-1\"} />\n        <p className={\"text-xs\"}>{estimatedReadTime(content).text}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogPreviewMetaData;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\ninterface Props {\n  href?: string;\n  target?: string;\n  styles?: string;\n  children: string;\n}\n\nexport default function Button(props: Props) {\n  const { href, target, styles } = props;\n  const buttonStyles = `block bg-primary hover:bg-primary-800 transition ease-in-out text-white rounded p-2 text-center ${\n    styles && styles\n  }`;\n\n  if (href) {\n    if (target && target === \"_blank\") {\n      return (\n        <a href={href} target={target} className={buttonStyles}>\n          {props.children}\n        </a>\n      );\n    } else {\n      return (\n        <Link to={href} target={target} className={buttonStyles}>\n          {props.children}\n        </Link>\n      );\n    }\n  }\n  return <button className={buttonStyles}>{props.children}</button>;\n}\n","import React from \"react\";\n\ninterface Props {\n  excerpt: string;\n}\n\nconst Excerpt: React.FC<Props> = ({ excerpt }) => {\n  return (\n    <p className=\"mt-3 mb-5 text-left\">\n      {excerpt.length > 230 ? `${excerpt.slice(0, 230)}...` : excerpt}\n    </p>\n  );\n};\n\nexport default Excerpt;\n","import React from \"react\";\n\ninterface Props {\n  children: string;\n  variant?: string;\n  align?: string;\n}\n\nexport default function HeaderText(props: Props) {\n  const { variant, align } = props;\n  const renderVariant = () => {\n    switch (variant) {\n      case \"h2\":\n        return (\n          <h2 className=\"permanentMarker mt-20 text-4xl capitalize\">\n            {props.children}\n          </h2>\n        );\n      case \"h3\":\n        return (\n          <h3 className=\"permanentMarker mt-20 text-3xl capitalize\">\n            {props.children}\n          </h3>\n        );\n      case \"h4\":\n        return (\n          <h4 className=\"permanentMarker mt-20 text-2xl capitalize\">\n            {props.children}\n          </h4>\n        );\n      case \"h5\":\n        return (\n          <h5 className=\"permanentMarker mt-20 text-xl capitalize\">\n            {props.children}\n          </h5>\n        );\n      case \"h6\":\n        return (\n          <h6 className=\"permanentMarker mt-20 text-xl capitalize\">\n            {props.children}\n          </h6>\n        );\n      default:\n        return (\n          <h1 className=\"permanentMarker mt-20 text-5xl capitalize\">\n            {props.children}\n          </h1>\n        );\n    }\n  };\n  const textAlign = () => {\n    switch (align) {\n      case \"left\":\n        return [\"text-left\", \"mr-auto\"];\n      case \"right\":\n        return [\"text-right\", \"ml-auto\"];\n      default:\n        return [\"text-center\", \"mx-auto\"];\n    }\n  };\n  return (\n    <div className={`${textAlign()[0]}`}>\n      {renderVariant()}\n      <span\n        className={`block h-[5px] w-[55px] mt-0 ${\n          textAlign()[1]\n        } lg:mt-3 mb-20 bg-red-700`}\n      ></span>\n    </div>\n  );\n}\n","import React from \"react\";\nimport MainContainer from \"../components/MainContainer\";\nimport HeaderText from \"../components/HeaderText\";\nimport { graphql } from \"gatsby\";\nimport { POST } from \"../Types\";\nimport BlogPreviewMetaData from \"../components/BlogPreviewMetaData\";\nimport Excerpt from \"../components/Excerpt\";\nimport Button from \"../components/Button\";\n\nconst Blog: React.FC = ({ data }: any) => {\n  const posts: POST[] = data.allContentfulPost.nodes;\n  return (\n    <MainContainer\n      title={\"Cris Noel | Blog\"}\n      href={`${process.env.DOMAIN}/blog`}\n    >\n      <div className=\"mt-16\"></div>\n      <HeaderText>Blog</HeaderText>\n      <div className=\"grid mx-auto mb-16 md:grid-cols-2 lg:grid-cols-3 gap-4 max-w-7xl px-2 sm:px-6 lg:px-8\">\n        {posts.map((post) => {\n          const { title, date, image, content, slug } = post;\n          const excerpt = JSON.parse(post.content.raw).content.find(\n            (obj: any) => obj.nodeType === \"paragraph\"\n          ).content[0].value;\n          return (\n            <div className={\"flex flex-col\"} key={post.id}>\n              <img\n                src={`https://${image.file.url}`}\n                width=\"100%\"\n                height=\"200px\"\n              />\n              <h5 className={\"text-xl mt-3 mb-3\"}>{title}</h5>\n              <BlogPreviewMetaData date={date} content={content.raw} />\n              <Excerpt excerpt={excerpt} />\n              <Button href={`/blog/${slug}`} styles={\"mt-auto\"}>\n                Read More\n              </Button>\n              <hr className={\"mt-3 mb-3 md:hidden\"} />\n            </div>\n          );\n        })}\n      </div>\n    </MainContainer>\n  );\n};\n\nexport default Blog;\n\nexport const query = graphql`\n  query allBlogData {\n    allContentfulPost(sort: { date: DESC }) {\n      nodes {\n        id\n        contentful_id\n        date(formatString: \"MMMM Do, YYYY\")\n        title\n        slug\n        image {\n          file {\n            url\n          }\n        }\n        content {\n          raw\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","date","content","React","className","FaBookmark","color","FaClock","estimatedReadTime","text","Button","props","href","target","styles","buttonStyles","children","Link","to","excerpt","length","slice","HeaderText","variant","align","textAlign","renderVariant","data","posts","allContentfulPost","nodes","MainContainer","title","map","post","image","slug","JSON","parse","raw","find","obj","nodeType","value","key","id","src","file","url","width","height","BlogPreviewMetaData","Excerpt"],"sourceRoot":""}