{"version":3,"file":"component---src-pages-index-tsx-5781a18a70affcba6bb5.js","mappings":"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","sources":["webpack://cris-noel/./src/images/hero.jpg","webpack://cris-noel/./src/components/Hero.tsx","webpack://cris-noel/./src/components/HomePageSection.tsx","webpack://cris-noel/./src/images/profile_picture.jpg","webpack://cris-noel/./src/components/IconButton.tsx","webpack://cris-noel/./src/components/Sections/About.tsx","webpack://cris-noel/./src/components/Sections/Experience.tsx","webpack://cris-noel/./src/components/Sections/Projects.tsx","webpack://cris-noel/./src/styles/Sections/projects.module.css","webpack://cris-noel/./src/components/BlogPreview.tsx","webpack://cris-noel/./src/components/Sections/BlogSection.tsx","webpack://cris-noel/./node_modules/@emailjs/browser/es/store/store.js","webpack://cris-noel/./node_modules/@emailjs/browser/es/utils/validateParams.js","webpack://cris-noel/./node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","webpack://cris-noel/./node_modules/@emailjs/browser/es/api/sendPost.js","webpack://cris-noel/./node_modules/@emailjs/browser/es/index.js","webpack://cris-noel/./node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","webpack://cris-noel/./src/components/GoogleMap.tsx","webpack://cris-noel/./src/components/Sections/Contact.tsx","webpack://cris-noel/./src/pages/index.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/hero-c6959342d4900ec25edc07afd3300655.jpg\";","import React from \"react\";\nimport HeroImg from \"../images/hero.jpg\";\nimport { FaChevronDown } from \"react-icons/fa6\";\nimport { Link } from \"gatsby\";\n\nconst heroStyles = {\n  background: `url(${HeroImg}) center no-repeat`,\n  position: \"relative\",\n  height: \"100vh\",\n  backgroundSize: \"cover\",\n  backgroundBlendMode: \"overlay\",\n  backgroundColor: \"rgba(80, 73, 48, 0.9)\",\n};\n\nconst heroArrow = {\n  position: \"absolute\",\n  top: \"80%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -80%)\",\n};\n\ninterface Props {\n  is404?: boolean;\n}\n\nconst Hero: React.FC<Props> = ({ is404 = false }) => {\n  return (\n    <div style={heroStyles}>\n      <div\n        id=\"hero-mid\"\n        className={`absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-center ${\n          is404 && `w-full p-8 bg-black/[0.6]`\n        }`}\n      >\n        <h1\n          id=\"hero-headline\"\n          className=\"permanentMarker text-6xl text-white tracking-wider mb-3\"\n        >\n          {is404 ? \"Page Not Found\" : \"Cris Noel\"}\n        </h1>\n        {is404 ? (\n          <Link to={`${process.env.DOMAIN}`} className={\"text-red-700\"}>\n            Go Home\n          </Link>\n        ) : (\n          <p id=\"hero-subheading\" className=\"text-white mt-5\">\n            Web Developer / Cavite, Philippines\n          </p>\n        )}\n      </div>\n      {!is404 && (\n        <Link to=\"#about\" style={heroArrow}>\n          <FaChevronDown\n            className={\n              \"text-white bg-black/[0.8] w-7 h-7 my-0 mx-auto mt-3 rounded-full p-2\"\n            }\n          />\n        </Link>\n      )}\n    </div>\n  );\n};\n\nexport default Hero;\n","import * as React from \"react\";\nimport HeaderText from \"./HeaderText\";\nimport Divider from \"./Divider\";\n\ninterface Props {\n  title: string;\n  noDivider?: boolean;\n  children: any;\n}\nconst HomePageSection: React.FC<Props> = (props) => {\n  const { title, noDivider } = props;\n  return (\n    <>\n      <section\n        id={title}\n        className={`mx-auto max-w-xs md:max-w-3xl lg:max-w-7xl lg:min-w-7xl px-2 sm:px-12 ${\n          noDivider && \"pb-20\"\n        }`}\n      >\n        <HeaderText variant={\"h2\"}>{title}</HeaderText>\n        {props.children}\n      </section>\n      {!noDivider && <Divider mt={20} />}\n    </>\n  );\n};\n\nexport default HomePageSection;\n","export default __webpack_public_path__ + \"static/profile_picture-2608f3c0a95dc5b6649fe42d33f9695e.jpg\";","import React from \"react\";\nimport { Link } from \"gatsby\";\n\ninterface Props {\n  href: string;\n  target: string;\n  icon: any;\n}\n\nexport default function IconButton(props: Props) {\n  const { href, target, icon } = props;\n  const iconButtonStyles = `p-2 rounded-full hover:bg-gray-200`;\n  if (target === \"_blank\") {\n    return (\n      <a href={href} target={target} className={iconButtonStyles}>\n        {icon}\n      </a>\n    );\n  }\n  return (\n    <Link to={href} className={iconButtonStyles}>\n      {icon}\n    </Link>\n  );\n}\n","import React from \"react\";\nimport HomePageSection from \"../HomePageSection\";\nimport Button from \"../Button\";\nimport ProfilePicture from \"../../images/profile_picture.jpg\";\nimport { FaCodepen, FaLinkedin, FaGithub } from \"react-icons/fa\";\nimport { MdEmail } from \"react-icons/md\";\nimport IconButton from \"../IconButton\";\nimport Divider from \"../Divider\";\n\nconst About: React.FC = () => {\n  return (\n    <HomePageSection title={\"about\"}>\n      <div className=\"flex flex-col lg:flex-row lg:items-start\">\n        <img\n          src={ProfilePicture}\n          className={\"rounded h-36 w-36 mx-auto mb-5 lg:mr-8 lg:h-80 lg:w-80\"}\n        />\n        <div>\n          <p className={\"text-xl mb-5\"}>\n            What's up, I'm Cris and I'm a Web Developer currently based in the\n            Philippines. I have a passion for building websites and learning\n            more about new frameworks and languages that I haven't mastered yet.\n            I'm well versed in both front-end and back-end development. I'm\n            currently accepting freelance work, if you're in need of a website,\n            I'm your guy, feel free to contact me.\n          </p>\n          <Button href={process.env.RESUME} target={\"_blank\"}>\n            View Resume\n          </Button>\n          <Divider mb={2} />\n          <div className=\"flex justify-evenly md:inline-flex\">\n            <IconButton\n              href=\"https://www.linkedin.com/in/crisncancino/\"\n              target=\"_blank\"\n              icon={<FaLinkedin className={\"h-5 w-5\"} />}\n            />\n            <IconButton\n              href=\"https://github.com/crisnoel12\"\n              target=\"_blank\"\n              icon={<FaGithub className={\"h-5 w-5\"} />}\n            />\n            <IconButton\n              href=\"https://codepen.io/crisnoel12\"\n              target=\"_blank\"\n              icon={<FaCodepen className={\"h-5 w-5\"} />}\n            />\n            <IconButton\n              href=\"mailto:crisncancino@gmail.com\"\n              target=\"_blank\"\n              icon={<MdEmail className={\"h-5 w-5\"} />}\n            />\n          </div>\n        </div>\n      </div>\n    </HomePageSection>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { EXPERIENCE } from \"../../Types\";\nimport HomePageSection from \"../HomePageSection\";\nimport Divider from \"../Divider\";\n\ninterface Props {\n  experiences: EXPERIENCE[];\n}\n\nconst Experience: React.FC<Props> = ({ experiences }) => {\n  return (\n    <HomePageSection title={\"experience\"}>\n      {experiences.map((experience, i, row) => {\n        const lastItem = i + 1 === row.length;\n        return (\n          <div key={experience.id} className={`${lastItem ? \"\" : \"mb-20\"}`}>\n            <div className=\"inline-flex\">\n              <img\n                src={experience.logo.file.url}\n                className={\"h-16 w-16 mr-5\"}\n              />\n              <div>\n                <h5 className=\"font-medium text-xl lg:text-2xl\">\n                  {experience.position}\n                </h5>\n                <h6 className=\"font-medium text-xl lg:text-2xl\">\n                  <span className=\"text-red-800\">@ </span>\n                  <span className=\"underline\">{experience.company}</span>\n                </h6>\n              </div>\n            </div>\n            <Divider />\n            <ul className=\"pl-10\">\n              {experience.responsibilities.map((responsibility, i, row) => {\n                const lastItem = i + 1 === row.length;\n                return (\n                  <li\n                    key={`${experience.id}_${responsibility}`}\n                    className={`list-disc mt-5 ${\n                      lastItem ? \"\" : \"mb-5\"\n                    } lg:text-lg`}\n                  >\n                    {responsibility}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        );\n      })}\n    </HomePageSection>\n  );\n};\n\nexport default Experience;\n","import React from \"react\";\nimport { PROJECT } from \"../../Types\";\nimport HomePageSection from \"../HomePageSection\";\nimport * as projectSectionStyles from \"../../styles/Sections/projects.module.css\";\nimport Button from \"../Button\";\nimport Divider from \"../Divider\";\n\nconst PROJECT_TYPE = {\n  PERSONAL: {\n    NAME: \"Personal\",\n    VALUE: 0,\n  },\n  WORK: {\n    NAME: \"Work\",\n    VALUE: 1,\n  },\n};\n\ninterface Props {\n  personalProjects: PROJECT[];\n  workProjects: PROJECT[];\n}\n\nconst Projects: React.FC<Props> = ({ personalProjects, workProjects }) => {\n  const [projectTab, setProjectTab] = React.useState(\n    PROJECT_TYPE.PERSONAL.VALUE\n  );\n\n  const changeProjectTab = (value) => setProjectTab(value);\n\n  const renderProjectType = (projectType: any) => {\n    if (projectType === PROJECT_TYPE.PERSONAL.VALUE) {\n      return (\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n          {personalProjects && personalProjects.length > 0 ? (\n            personalProjects.map((project) => (\n              <a\n                key={project.id}\n                href={project.url}\n                target=\"_blank\"\n                className=\"block relative\"\n              >\n                <img\n                  src={`https:${project.image.file.url}`}\n                  width=\"100%\"\n                  className={\"h-full\"}\n                />\n                <div className={projectSectionStyles.personalProjectBG}>\n                  <div\n                    className={projectSectionStyles.personalProjectTxtContainer}\n                  >\n                    <p className={\"permanentMarker text-2xl mb-4\"}>\n                      {project.title}\n                    </p>\n                    <p className={\"text-sm\"}>\n                      {project.description.description}\n                    </p>\n                  </div>\n                </div>\n              </a>\n            ))\n          ) : (\n            <p>No Projects to show.</p>\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n          {workProjects && workProjects.length > 0 ? (\n            workProjects.map((project) => (\n              <div\n                key={project.id}\n                className={\n                  \"flex flex-col border-solid border-2 border-grey-300 rounded p-8\"\n                }\n              >\n                <div>\n                  <h6 className={\"permanentMarker text-lg mb-2\"}>\n                    {project.title}\n                  </h6>\n                  <Divider />\n                </div>\n                <p className={\"mb-8\"}>{project.description.description}</p>\n                <Button href={project.url} target={\"_blank\"} styles={\"mt-auto\"}>\n                  VIEW\n                </Button>\n              </div>\n            ))\n          ) : (\n            <p>No Projects to show.</p>\n          )}\n        </div>\n      );\n    }\n  };\n\n  return (\n    <HomePageSection title={\"projects\"}>\n      <div className=\"grid grid-cols-2 justify-center\">\n        {Object.keys(PROJECT_TYPE).map((key) => (\n          <button\n            key={PROJECT_TYPE[key].VALUE}\n            className={\n              projectTab === PROJECT_TYPE[key].VALUE\n                ? \"font-medium text-red-800 border-b-2 border-red-800 mb-5\"\n                : \"mb-5\"\n            }\n            onClick={() => changeProjectTab(PROJECT_TYPE[key].VALUE)}\n          >\n            {PROJECT_TYPE[key].NAME}\n          </button>\n        ))}\n      </div>\n\n      {renderProjectType(projectTab)}\n    </HomePageSection>\n  );\n};\n\nexport default Projects;\n","// extracted by mini-css-extract-plugin\nexport var personalProjectBG = \"projects-module--personalProjectBG--5ae4d\";\nexport var personalProjectTxtContainer = \"projects-module--personalProjectTxtContainer--38f53\";","import React from \"react\";\nimport { POST } from \"../Types\";\nimport Excerpt from \"./Excerpt\";\nimport BlogPreviewMetaData from \"./BlogPreviewMetaData\";\nimport { Link } from \"gatsby\";\n\ninterface Props {\n  data: POST;\n}\n\nconst BlogPreview: React.FC<Props> = ({ data }: Props) => {\n  const { title, date, content, slug } = data;\n  let excerpt = JSON.parse(content.raw).content.find(\n    (obj) => obj.nodeType === \"paragraph\"\n  ).content[0].value;\n  return (\n    <div className=\"flex flex-col\">\n      <img\n        src={`https://${data.image.file.url}`}\n        width=\"100%\"\n        height=\"200px\"\n        alt={`${data.title} Main Image`}\n      />\n      <h5 className={\"text-xl mt-3 mb-3\"}>{title}</h5>\n      <BlogPreviewMetaData date={date} content={content.raw} />\n      <Excerpt excerpt={excerpt} />\n      <Link\n        to={`/blog/${slug}`}\n        className={\"mt-3 text-sm text-left text-red-700\"}\n      >\n        Read More →\n      </Link>\n    </div>\n  );\n};\n\nexport default BlogPreview;\n","import React from \"react\";\nimport { POST } from \"../../Types\";\nimport HomePageSection from \"../HomePageSection\";\nimport BlogPreview from \"../BlogPreview\";\nimport Button from \"../Button\";\n\ninterface Props {\n  posts: POST[];\n}\n\nconst BlogSection: React.FC<Props> = ({ posts }: Props) => {\n  return (\n    <HomePageSection title={\"blog\"}>\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n        {posts.map((post) => (\n          <BlogPreview key={post.id} data={post} />\n        ))}\n      </div>\n      <Button href={`/blog`} styles={\"w-full mt-8\"}>\n        View All\n      </Button>\n    </HomePageSection>\n  );\n};\n\nexport default BlogSection;\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.11.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React from \"react\";\n\nexport default function GoogleMap() {\n  return (\n    <iframe\n      id=\"map\"\n      className=\"w-full h-[375px] lg:h-full\"\n      src={`https://www.google.com/maps/embed/v1/place?key=${process.env.GOOGLE_API_KEY}&q=Cavite&maptype=satellite`}\n      allowFullScreen\n    ></iframe>\n  );\n}\n","import React, { useContext, useRef } from \"react\";\nimport HomePageSection from \"../HomePageSection\";\nimport { IoMdSend } from \"react-icons/io\";\nimport { BiReset } from \"react-icons/bi\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport emailjs from \"@emailjs/browser\";\nimport ServerStateContext from \"../../context/ServerStateContext\";\nimport { IContactField } from \"../../Types\";\nimport GoogleMap from \"../GoogleMap\";\n\nconst Contact: React.FC = () => {\n  const form = useRef();\n\n  const [inputs, setInputs] = React.useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  });\n\n  const { serverState, setServerState, handleServerResponse }: any =\n    useContext(ServerStateContext);\n\n  const handleOnChange = (event: any) => {\n    event.persist();\n    setInputs((prev) => ({\n      ...prev,\n      [event.target.id]: event.target.value,\n    }));\n  };\n\n  const handleOnSubmit = (event: any) => {\n    event.preventDefault();\n    setServerState({ submitting: true });\n    emailjs\n      .sendForm(\n        `${process.env.EMAILJS_SERVICE_ID}`,\n        `${process.env.EMAILJS_TEMPLATE_ID}`,\n        form.current,\n        `${process.env.EMAILJS_PUBLIC_ID}`\n      )\n      .then(\n        (result) => {\n          handleServerResponse(result.status, \"Message sent successfully!\");\n          handleReset();\n          console.log(result.text);\n        },\n        (error) => {\n          handleServerResponse(\n            error.status,\n            \"There was an error trying to submit your request.\"\n          );\n          console.log(error);\n        }\n      );\n  };\n\n  const handleReset = () => {\n    setInputs({\n      name: \"\",\n      email: \"\",\n      message: \"\",\n    });\n  };\n\n  const contactFields: IContactField[] = [\n    {\n      id: \"to_name\",\n      name: \"to_name\",\n      type: \"hidden\",\n      value: \"Cris\",\n    },\n    {\n      id: \"from_name\",\n      name: \"from_name\",\n      type: \"hidden\",\n      value: \"crisnoel12.github.io\",\n    },\n    {\n      id: \"name\",\n      name: \"user_name\",\n      placeholder: \"NAME*\",\n      value: inputs.name,\n      onChange: handleOnChange,\n      required: true,\n    },\n    {\n      id: \"email\",\n      name: \"reply_to\",\n      type: \"email\",\n      placeholder: \"E-MAIL*\",\n      value: inputs.email,\n      onChange: handleOnChange,\n      required: true,\n    },\n    {\n      id: \"message\",\n      name: \"message\",\n      placeholder: \"MESSAGE*\",\n      value: inputs.message,\n      onChange: handleOnChange,\n      rows: 8,\n      required: true,\n    },\n  ];\n\n  const contactFieldClassName =\n    \"w-full mb-3 p-5 bg-gray-200 border-solid border-b-2 border-gray-500 rounded\";\n\n  return (\n    <HomePageSection title={\"contact\"} noDivider>\n      <div className=\"grid lg:grid-cols-2 gap-4\">\n        <form\n          ref={form}\n          onSubmit={handleOnSubmit}\n          noValidate\n          autoComplete=\"off\"\n        >\n          {contactFields.map((field: IContactField) => {\n            if (!field.rows) {\n              return (\n                <input\n                  key={field.id}\n                  {...field}\n                  className={contactFieldClassName}\n                />\n              );\n            }\n            return (\n              <textarea\n                key={field.id}\n                {...field}\n                className={contactFieldClassName}\n              />\n            );\n          })}\n          <div className={\"flex justify-end\"}>\n            <button\n              type=\"submit\"\n              className={\n                \"bg-red-700 border-2 border-red-700 w-full lg:w-36 p-2 rounded text-white mr-2\"\n              }\n              disabled={serverState.submitting}\n            >\n              {!serverState.submitting ? (\n                <div className=\"inline-flex items-center\">\n                  <IoMdSend className=\"h-5 w-5 mr-2\" color={\"white\"} />\n                  <span>SEND</span>\n                </div>\n              ) : (\n                <AiOutlineLoading3Quarters className=\"animate-spin h-5 w-5 text-white mx-auto\" />\n              )}\n            </button>\n            <button\n              type={\"reset\"}\n              className=\"border-2 border-black w-full lg:w-36 p-2 rounded\"\n              onClick={handleReset}\n            >\n              <div className=\"inline-flex items-center\">\n                <BiReset className=\"h-5 w-5 mr-2\" color={\"black\"} />\n                <span>RESET</span>\n              </div>\n            </button>\n          </div>\n        </form>\n        <GoogleMap />\n      </div>\n    </HomePageSection>\n  );\n};\n\nexport default Contact;\n","import * as React from \"react\";\nimport type { PageProps } from \"gatsby\";\nimport { graphql } from \"gatsby\";\nimport { sortByASC, sortByDESC } from \"../Utils/index\";\nimport { EXPERIENCE, POST, PROJECT } from \"../Types\";\nimport MainContainer from \"../components/MainContainer\";\nimport Hero from \"../components/Hero\";\nimport About from \"../components/Sections/About\";\nimport Experience from \"../components/Sections/Experience\";\nimport Projects from \"../components/Sections/Projects\";\nimport BlogSection from \"../components/Sections/BlogSection\";\nimport Contact from \"../components/Sections/Contact\";\nimport Project from \"../Types/Project\";\n\ninterface Props {\n  data: {\n    allContentfulExperience: {\n      nodes: EXPERIENCE[];\n    };\n    allContentfulProjects: {\n      nodes: PROJECT[];\n    };\n    allContentfulPost: {\n      nodes: POST[];\n    };\n  };\n}\n\nconst IndexPage: React.FC<Props> = ({\n  data: { allContentfulExperience, allContentfulPost, allContentfulProjects },\n}) => {\n  const experiences: EXPERIENCE[] = sortByASC(allContentfulExperience.nodes);\n  const workProjects: PROJECT[] = sortByDESC(\n    allContentfulProjects.nodes.filter(\n      (project: Project) => project.personalProject === false\n    )\n  );\n  const personalProjects: PROJECT[] = sortByDESC(\n    allContentfulProjects.nodes.filter(\n      (project: Project) => project.personalProject === true\n    )\n  );\n  const posts: POST[] = allContentfulPost.nodes;\n\n  return (\n    <MainContainer\n      title={`Cris Noel | Web Developer`}\n      href={`${process.env.DOMAIN}`}\n    >\n      <Hero />\n      <About />\n      <Experience experiences={experiences} />\n      <Projects\n        personalProjects={personalProjects}\n        workProjects={workProjects}\n      />\n      <BlogSection posts={posts} />\n      <Contact />\n    </MainContainer>\n  );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query Data {\n    allContentfulExperience {\n      nodes {\n        id\n        contentful_id\n        position\n        company\n        responsibilities\n        createdAt\n        logo {\n          file {\n            url\n          }\n        }\n      }\n    }\n    allContentfulProjects {\n      nodes {\n        id\n        contentful_id\n        title\n        description {\n          description\n        }\n        technologies\n        personalProject\n        url\n        createdAt\n        image {\n          file {\n            url\n          }\n        }\n      }\n    }\n    allContentfulPost(limit: 3, sort: { date: DESC }) {\n      nodes {\n        id\n        contentful_id\n        date(formatString: \"MMMM Do, YYYY\")\n        title\n        slug\n        image {\n          file {\n            url\n          }\n        }\n        content {\n          raw\n        }\n      }\n    }\n  }\n`;\n"],"names":["heroStyles","background","HeroImg","position","height","backgroundSize","backgroundBlendMode","backgroundColor","heroArrow","top","left","transform","_ref","is404","React","style","id","className","Link","to","FaChevronDown","props","title","noDivider","HeaderText","variant","children","Divider","mt","IconButton","href","target","icon","iconButtonStyles","HomePageSection","src","ProfilePicture","Button","process","mb","FaLinkedin","FaGithub","FaCodepen","MdEmail","experiences","map","experience","i","row","lastItem","length","key","logo","file","url","company","responsibilities","responsibility","PROJECT_TYPE","PERSONAL","NAME","VALUE","WORK","personalProjects","workProjects","projectTab","setProjectTab","Object","keys","onClick","changeProjectTab","value","project","image","width","description","styles","data","date","content","slug","excerpt","JSON","parse","raw","find","obj","nodeType","alt","BlogPreviewMetaData","Excerpt","posts","post","BlogPreview","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","responseStatus","open","forEach","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","GoogleMap","allowFullScreen","useRef","inputs","setInputs","name","email","message","serverState","setServerState","handleServerResponse","useContext","ServerStateContext","handleOnChange","event","persist","prev","handleReset","contactFields","type","placeholder","onChange","required","rows","contactFieldClassName","ref","onSubmit","preventDefault","submitting","emailjs","current","then","result","console","log","error","noValidate","autoComplete","field","disabled","AiOutlineLoading3Quarters","IoMdSend","color","BiReset","allContentfulExperience","allContentfulPost","allContentfulProjects","sortByASC","nodes","sortByDESC","filter","personalProject","MainContainer","Hero","About","Experience","Projects","BlogSection","Contact"],"sourceRoot":""}